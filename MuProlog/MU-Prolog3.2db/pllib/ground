%	$Header: ground.pl,v 1.3 85/09/23 18:57:49 lee Exp $
%
% Preds concerning groundness etc: ground/1 when_ground/2 freeze/2
%				make_ground/1
%
% All the cuts should be translated into efficient two way tests,
% if/when they are implemented.  They are used at the moment to
% kill choice points which should never be created.
%
% Lee 8/9/85

?- use_if muprolog.
	% Call Goal when Term is ground
when_ground(Term, Goal) :-
	$nground(Term).
when_ground(Term, Goal) :-
	Goal.
?- use_else.
	% Call Goal when Term is ground
	% Eventually, we can implement this as follows:
	%
	% ?- when_ground(T, G) when ground(T).
	% when_ground(T, G) :- call(G).
when_ground(Term, Goal) :-
	$wground(Term, done, Done),
	freeze(Done, Goal).

	% $wground unifies its last two arguments when its first
	% argument is/becomes ground
	?- wait $wground(0,0,1).
	$wground(xxx, _, _) :- fail.
	?- $wground(T, A, B) when T.
$wground(T, D, D1) :-
	atomic(T),
	!,
	D = D1.
$wground(T, D, D1) :-
	functor(T, F, N),
	$wground1(N, T, D, D1).

	% calls $wground for each arg
$wground1(0, T, D, D1) :-
	!,
	D = D1.
$wground1(N, T, D, D2) :-
	arg(N, T, A),
	$wground(A, D, D1),
	N1 is N-1,
	$wground1(N1, T, D1, D2).
?- use_end.

	% call G when V is a nonvar
?- use_if muprolog.
	?- wait freeze(0,0).		% MU version
	freeze(xxx, _) :- fail.
?- use_else.
	?- freeze(V, G) when V.	% NU version
?- use_end.
freeze(V, Goal) :-
	Goal.

	% T has no vars at the time of the call (non logical)
?- use_if muprolog.
	ground(X) :-
		nground(X),	% fails if ground, delays otherwise
		!,
		fail.
	ground(X).

	nground(X) :-
		$nground(X).
?- use_else.
	ground(T) :-
		var(T),
		!,
		fail.
	ground(T) :-
		atomic(T),
		!.
	ground(T) :-
		functor(T, F, N),
		$ground1(N, T).

		% calls ground for each arg
	$ground1(0, T) :-
		!.
	$ground1(N, T) :-
		arg(N, T, A),
		ground(A),
		N1 is N-1,
		$ground1(N1, T).
?- use_end.

	% make a term ground (all vars are bound to [])
make_ground([]) :-
	!.
make_ground(A.B) :-
	!,
	make_ground(A),
	make_ground(B).
make_ground(N) :-
	atomic(N),
	!.
make_ground(C) :-
	C =.. F.A,
	make_ground(A).
