
	.pred	'expandTerm',2
	labelx	2
5: 	sot	0,&3,&4,&4,&3
3: 	t	3,0,&0
	r	3,0,&1
	tr	3,0,&2
4: 	t	3,0,&0
	tr	3,0,&2
	.clause
0:	all	1
	gvary	0,2
	call	1,2,&'termExpansion'/2
	cuty	0
	dallpro	
	.clause
1:	gvarx	3,0
	gsx2	1,4,5,$':-'/2
	all	1
	gvary	0,2
	typx	3,252
	gsx2	3,6,7,$'-->'/2
	cuty	0
	ps	0,$'dcg$gexpand'/4
	uvalx	6
	uvalx	7
	uvalx	4
	uvalx	5
	ps	1,$'expandTerm'/2
	ulvx	3
	us	255,$':-'/2
	uvalx	4
	uvalx	5
	pvarx	2,3
	call	1,4,&'$catchError'/4
	cuty	0
	dallpro	
	.clause
2:	gvalx	0,1
	pro	
	last

	.pred	'dcg$add_bind_end',5
4: 	sot	0,&2,&5,&3,&3
2: 	t	5,0,&0
	tr	5,0,&1
5: 	soc	0,&($'bound':&0,$'nbound':&1),&3
3: 	fail	
	.clause
0:	gc	0,$'bound'
	gvara	0,1
	ps	1,$'='/2
	ulvx	3
	ulvx	4
	exec	3,&'dcg$combine'/3
	.clause
1:	gc	0,$'nbound'
	gvalx	1,2
	gvalx	3,4
	pro	
	last

	.pred	'dcg$add_bind_start',5
4: 	sot	0,&2,&5,&3,&3
2: 	t	5,0,&0
	tr	5,0,&1
5: 	soc	0,&($'bound':&0,$'nbound':&1),&3
3: 	fail	
	.clause
0:	gc	0,$'bound'
	ps	0,$'='/2
	ulvx	3
	ulvx	4
	exec	3,&'dcg$combine'/3
	.clause
1:	gc	0,$'nbound'
	gvalx	1,2
	gvalx	3,4
	pro	
	last

	.pred	'dcg$gexpand',4
	labelx	4
3: 	sot	0,&2,&1,&1,&4
2: 	t	5,0,&0
	tr	5,0,&1
4: 	js	0,$','/2,&0
	j	&1
	j	&0
	.clause
0:	gs	0,$','/2
	all	9
	uvary	6
	uvary	3
	gvary	4,1
	gvary	5,2
	gvary	2,3
	cutx	4
	labely	7
23: 	te	0,0,0,&27
	labely	8
24: 	te	0,0,0,&25
	pvaly	3,0
	call	9,1,&'dcg$islist'/1
	cuty	8
	fail	
25: 	tre	0,0
26: 	cuty	7
	pc	5,#(CHR,&12)
	ps	6,$','/2
	uvaly	6
	uvaly	3
	ps	0,$'format'/3
	uc	$'user_error'
	uvalx	5
	ul	255
	uvalx	6
	uc	$[]
	call	7,1,&'$throwError'/1
	j	&28
27: 	tre	0,0
28: 	pvaly	6,0
	pvaly	5,1
	pvary	1,2
	pvary	0,3
	call	5,4,&'dcg$tag'/4
	ps	0,$','/2
	ulvy	4
	us	255,$'append'/1
	uvaly	3
	pvaly	2,1
	pc	2,$'bound'
	pvarx	3,3
	puval	1,4
	puval	0,5
	dallexe	6,&'dcg$con'/6
	.clause
1:	all	4
	gvary	3,1
	gvara	1,2
	gvary	2,3
	pvary	1,2
	pvary	0,3
	call	4,4,&'dcg$tag'/4
	pvaly	3,0
	pvaly	2,1
	pc	2,$'bound'
	pvarx	3,3
	puval	1,4
	puval	0,5
	dallexe	6,&'dcg$con'/6
	last
12: 	.string	"~N~w is not a valid head for a DCG rule.~n"

	.pred	'dcg$con',6
	labelx	6
4: 	sot	0,&0,&3,&3,&3
3: 	t	7,0,&1
	tr	7,0,&2
	.clause
0:	gvarx	7,0
	typx	7,3
	cutx	6
	pc	8,#(CHR,&13)
	ps	0,$'format'/3
	uc	$'user_error'
	uvalx	8
	ul	255
	ulvx	7
	uc	$[]
	exec	1,&'$throwError'/1
	.clause
1:	all	1
	gvary	0,6
	call	1,6,&'dcg$con1'/6
	cuty	0
	dallpro	
	.clause
2:	gc	3,$'nbound'
	gvara	2,4
	gvara	3,5
	exec	4,&'dcg$tag'/4
	last
13: 	.string	"~NVariable ~w unexpected as a non-terminal.~n"

	.pred	'dcg$tag',4
	labelx	4
6: 	sot	0,&0,&4,&5,&5
4: 	t	5,0,&0
	r	5,0,&1
	r	5,0,&2
	tr	5,0,&3
5: 	t	5,0,&1
	r	5,0,&2
	tr	5,0,&3
	.clause
0:	gvarx	5,0
14: 	te	6,0,6,&15
	typx	5,3
	j	&16
15: 	tre	6,0
	ctypx	5,49
16: 	cutx	4
	pc	6,#(CHR,&13)
	ps	0,$'format'/3
	uc	$'user_error'
	uvalx	6
	ul	255
	ulvx	5
	uc	$[]
	exec	1,&'$throwError'/1
	.clause
1:	all	1
	gvary	0,0
	pvaly	0,0
	call	1,1,&'systemPredicate'/1
	pc	1,#(CHR,&26)
	pl	2
	ulvy	0
	uc	$[]
	pc	0,$'user_error'
	call	0,3,&'$format'/3
	fail	
	.clause
2:	all	3
	gvary	2,1
	gvary	0,4
	pvarx	5,5
	univ	0,5
	pl	1
	ulvx	2
	ul	255
	ulvx	3
	uc	$[]
	gvara	0,5
	pvary	1,2
	call	3,3,&'append'/3
	pvaly	2,5
	puval	1,6
	univ	5,6
	cuty	0
	dallpro	
	.clause
3:	gvarx	5,0
	pc	6,#(CHR,&41)
	ps	0,$'format'/3
	uc	$'user_error'
	uvalx	6
	ul	255
	ulvx	5
	uc	$[]
	exec	1,&'$throwError'/1
	last
41: 	.string	"~N~w unexpectedly unexpected.~n"
26: 	.string	"~NWarning: ~w is a system predicate.~nIt shouldn't be used as a non-terminal.~n"
13: 	.string	"~N~w unexpected as a non-terminal.~n"

	.pred	'dcg$con1',6
	labelx	6
23: 	sot	0,&12,&24,&15,&25
12: 	t	7,0,&0
	r	7,0,&1
	r	7,0,&2
	r	7,0,&3
	r	7,0,&4
	r	7,0,&5
	r	7,0,&6
	r	7,0,&7
	r	7,0,&8
	r	7,0,&9
	r	7,0,&10
	tr	7,0,&11
24: 	soce	0,&($'!':&13,$[]:&14),&11
13: 	t	7,0,&5
	tr	7,0,&11
14: 	t	7,0,&1
	tr	7,0,&11
15: 	t	7,0,&0
	tr	7,0,&11
25: 	sose	0,&($','/2:&16,$'->'/2:&17,$';'/2:&18,$'='/1:&19,$'\\+'/1:&20,$'append'/1:&21,$'{}'/1:&22),&11
16: 	t	7,0,&3
	tr	7,0,&11
17: 	t	7,0,&8
	tr	7,0,&11
18: 	t	7,0,&6
	r	7,0,&7
	tr	7,0,&11
19: 	t	7,0,&2
	tr	7,0,&11
20: 	t	7,0,&9
	tr	7,0,&11
21: 	t	7,0,&10
	tr	7,0,&11
22: 	t	7,0,&4
	tr	7,0,&11
	.clause
0:	gl	0
	uvara	0
	all	4
	uvary	0
	gc	1,$'true'
	gc	3,$'bound'
	gl	4
	uvalx	0
	uvary	1
	gvary	2,5
	labely	3
39: 	te	1,0,1,&40
	pvaly	0,0
	call	4,1,&'dcg$islist'/1
	cuty	3
	pvaly	0,0
	pvaly	2,1
	pvaly	1,2
	dallexe	3,&'append'/3
40: 	tre	1,0
	pc	7,#(CHR,&38)
	pl	8
	uvalx	0
	uvaly	0
	ps	0,$'format'/3
	uc	$'user_error'
	uvalx	7
	ul	255
	uvalx	8
	uc	$[]
	dallexe	1,&'$throwError'/1
41: 	.clause
1:	gnil	0
	gc	1,$'true'
	gvalx	2,3
	gvalx	4,5
	pro	
	.clause
2:	gs	0,$'='/1
	ulvx	5
	gc	1,$'true'
	gvalx	2,3
	gvalx	4,5
	pro	
	.clause
3:	gs	0,$','/2
	all	8
	uvary	7
	uvara	0
	gvary	0,1
	gvary	5,3
	gvary	4,4
	pvary	1,1
	pvary	6,3
	pvary	3,4
	call	8,6,&'dcg$con'/6
	pvaly	7,0
	pvary	2,1
	puval	6,2
	pvaly	5,3
	pvaly	4,4
	puval	3,5
	call	3,6,&'dcg$con'/6
	puval	2,0
	puval	1,1
	pvaly	0,2
	dallexe	3,&'dcg$combine'/3
	.clause
4:	gsx1	0,7,$'{}'/1
	gvarx	8,1
	gvara	0,2
	gc	3,$'nbound'
	gvara	3,4
	gvara	4,5
	gvara	1,7
	gvara	2,8
	exec	5,&'dcg$add_bind_end'/5
	.clause
5:	gc	0,$'!'
	gvarx	7,1
	gvara	0,2
	gc	3,$'nbound'
	gvara	3,4
	gvara	4,5
	pc	1,$'!'
	gvara	2,7
	exec	5,&'dcg$add_bind_end'/5
	.clause
6:	gsx2	0,7,0,$';'/2
	gs	7,$'->'/2
	all	7
	uvary	3
	uvary	6
	gsx2	1,7,1,$';'/2
	gs	7,$'->'/2
	uvary	2
	uvary	5
	gc	3,$'nbound'
	gvary	1,4
	gvary	4,5
	cutx	6
	pc	2,$'bound'
	pvaly	1,3
	pvaly	4,4
	call	7,5,&'dcg$con_nbs'/5
	pvaly	6,0
	pvaly	5,1
	pc	2,$'bound'
	pvary	0,3
	pvaly	4,4
	call	4,5,&'dcg$con_nbs'/5
	pvaly	3,0
	pvaly	2,1
	pc	2,$'nbound'
	pvaly	1,3
	puval	0,4
	dallexe	5,&'dcg$con_nbs'/5
	.clause
7:	gs	0,$';'/2
	uvara	0
	all	4
	uvary	3
	gs	1,$';'/2
	uvara	1
	uvary	2
	gc	3,$'nbound'
	gvary	1,4
	gvary	0,5
	pc	2,$'bound'
	pvaly	1,3
	pvaly	0,4
	call	4,5,&'dcg$con_nbs'/5
	pvaly	3,0
	pvaly	2,1
	pc	2,$'bound'
	pvaly	1,3
	pvaly	0,4
	dallexe	5,&'dcg$con_nbs'/5
	.clause
8:	gs	0,$'->'/2
	all	4
	uvary	3
	uvara	0
	gs	1,$';'/2
	uvarx	7
	us	255,$'='/2
	uvary	1
	uvarx	8
	gs	7,$'->'/2
	uvary	2
	uvara	1
	gc	3,$'nbound'
	gvaly	1,4
	gvalx	8,5
	pvary	0,3
	gvara	4,8
	call	4,5,&'dcg$con_nbs'/5
	pvaly	3,0
	pvaly	2,1
	pc	2,$'nbound'
	pvaly	1,3
	puval	0,4
	dallexe	5,&'dcg$con_nbs'/5
	.clause
9:	gsx1	0,0,$'\\+'/1
	all	5
	gvary	2,1
	gvary	3,2
	gc	3,$'nbound'
	gvary	1,4
	gvary	0,5
	pvary	4,1
	pc	2,$'nbound'
	pvaly	1,3
	pvarx	4,4
	call	5,5,&'dcg$con_nbs'/5
	ps	1,$'\\+'/1
	ulvy	4
	pvaly	3,0
	pvaly	2,2
	pvaly	1,3
	pvaly	0,4
	dallexe	5,&'dcg$add_bind_end'/5
	.clause
10:	gs	0,$'append'/1
	all	5
	uvary	2
	gvary	3,1
	gvalx	2,3
	gvary	1,4
	gvary	0,5
	labely	4
172: 	te	0,0,0,&173
	pvaly	2,0
	call	5,1,&'dcg$islist'/1
	pvaly	2,0
	pvaly	1,1
	pvaly	0,2
	call	5,3,&'append'/3
	cuty	4
	pvaly	3,255
	gc	255,$'true'
	dallpro	
173: 	tre	0,0
	pvaly	3,255
	gs	255,$'append'/3
	uvaly	2
	ulvy	1
	ulvy	0
	dallpro	
174: 	.clause
11:	all	7
	gvary	4,1
	gvary	3,2
	gvary	2,3
	gvary	1,4
	gvary	0,5
	gvary	6,6
	pvary	5,1
	call	7,2,&'dcg$samething'/2
	cuty	6
	puval	5,0
	pvaly	4,1
	pvaly	3,2
	pvaly	2,3
	pvaly	1,4
	pvaly	0,5
	dallexe	6,&'dcg$con1'/6
	last
38: 	.string	"~NGroup of terminal symbols ~w is not a list.~n"

	.pred	'dcg$samething',2
5: 	sot	0,&3,&4,&4,&6
3: 	t	2,0,&0
	r	2,0,&1
	tr	2,0,&2
4: 	fail	
6: 	sos	0,&($'else'/2:&1,$'if'/1:&2,$'not'/1:&0),&4
	.clause
0:	gsx1	0,2,$'not'/1
	gs	1,$'\\+'/1
	uvalx	2
	pro	
	.clause
1:	gsx2	0,5,2,$'else'/2
	gs	5,$'if'/1
	us	255,$'then'/2
	uvarx	4
	uvarx	3
	gs	1,$';'/2
	uvarx	5
	uvalx	2
	gs	5,$'->'/2
	uvalx	4
	uvalx	3
	pro	
	.clause
2:	gs	0,$'if'/1
	us	255,$'then'/2
	uvarx	3
	uvarx	2
	gs	1,$'->'/2
	uvalx	3
	uvalx	2
	pro	
	last

	.pred	'dcg$con_nbs',5
	.clause
0:	all	5
	gvary	2,1
	gvary	1,3
	gvarx	5,4
	pvary	3,1
	pvary	4,3
	pvary	0,4
	call	5,6,&'dcg$con'/6
	puval	4,0
	puval	3,1
	pvaly	2,2
	pvaly	1,3
	puval	0,4
	dallexe	5,&'dcg$add_bind_start'/5
	last

	.pred	'dcg$islist',1
	labelx	1
4: 	sot	0,&0,&1,&2,&3
3: 	fail	
	.clause
0:	typx	0,3
	cutx	1
	fail	
	.clause
1:	gnil	0
	pro	
	.clause
2:	glvx2	0,255,0
	exec	1,&'dcg$islist'/1
	last

	.pred	'dcg$combine',3
	labelx	3
8: 	sot	0,&4,&9,&5,&10
4: 	t	4,0,&0
	r	4,0,&1
	r	4,0,&2
	tr	4,0,&3
9: 	jc	0,$'true',&6
5: 	t	4,0,&1
	tr	4,0,&3
6: 	t	4,0,&0
	r	4,0,&1
	tr	4,0,&3
10: 	js	0,$','/2,&7
	j	&5
7: 	t	4,0,&1
	r	4,0,&2
	tr	4,0,&3
	.clause
0:	gc	0,$'true'
	gvalx	1,2
	cutx	3
	pro	
	.clause
1:	gc	1,$'true'
	gvalx	0,2
	cutx	3
	pro	
	.clause
2:	gsx2	0,4,0,$','/2
	gs	2,$','/2
	uvalx	4
	uvara	2
	cutx	3
	exec	3,&'dcg$combine'/3
	.clause
3:	gs	2,$','/2
	ulvx	0
	ulvx	1
	pro	
	last

	.pred	'phrase',2
	.clause
0:	gvarx	3,0
	ps	2,$'a'/2
	ulvx	1
	uc	$[]
	pc	0,$'a'
	gvara	1,3
	all	1
	pvary	0,3
	call	1,4,&'dcg$gexpand'/4
	puval	0,0
	dallexe	1,&'call'/1
	last

	.pred	'$init',0
	.clause
1:	all	1
	labely	0
	call	1,0,&'initializing'/0
	pc	0,#(STR,&10)
	call	1,1,&'$dynamic'/1
	cuty	0
	fail	
	last
10: 	.word	$'/'/2
	.word	$'termExpansion'
	.word	$2

