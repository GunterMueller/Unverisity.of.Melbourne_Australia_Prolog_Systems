
	.pred	'splitArgN',3
	.clause
0:	glvx2	1,3,1
	apushx	0
	pushi	$$0
	jpred	4,&10
	gl	2
	uvalx	3
	uvara	2
	apushx	0
	afunc	47
	popx	0
	exec	3,&'splitArgN'/3
10: 	pl	4
	uvarx	5
	uvarx	6
	pl	7
	uvoid	1
	uvalx	4
	univ	3,7
	gl	2
	uvalx	5
	uvara	2
	gvara	0,1
	gvara	1,6
	exec	3,&'append'/3
11: 	last

	.pred	'splitArgNList',3
3: 	sot	1,&4,&0,&1,&2
4: 	sot	2,&5,&0,&1,&2
5: 	mkdel	3,&3
	mark	2
	mark	1
	delay	
2: 	fail	
	.clause
0:	gnil	1
	gnil	2
	pro	
	.clause
1:	all	3
	gvary	2,0
	gl	1
	uvara	1
	uvary	1
	gl	2
	uvara	2
	uvary	0
	pvaly	2,0
	call	3,3,&'splitArgN'/3
	pvaly	2,0
	pvaly	1,1
	pvaly	0,2
	dall	
	execsot	3,1,&4,&0,&1,&2
	last

	.pred	'splitArgNWithResidue',3
	.clause
0:	glvx2	1,3,1
	apushx	0
	pushi	$$0
	jpred	4,&10
	gl	2
	uvalx	3
	uvara	2
	apushx	0
	afunc	47
	popx	0
	exec	3,&'splitArgNWithResidue'/3
10: 	pl	4
	uvoid	1
	uvarx	5
	univ	3,4
	glvx2	2,255,2
	gvara	0,1
	gvara	1,5
	exec	3,&'append'/3
11: 	last

	.pred	'splitArgNWithResidueList',3
3: 	sot	1,&4,&0,&1,&2
4: 	sot	2,&5,&0,&1,&2
5: 	mkdel	3,&3
	mark	2
	mark	1
	delay	
2: 	fail	
	.clause
0:	gnil	1
	gnil	2
	pro	
	.clause
1:	all	3
	gvary	2,0
	gl	1
	uvara	1
	uvary	1
	gl	2
	uvara	2
	uvary	0
	pvaly	2,0
	call	3,3,&'splitArgNWithResidue'/3
	pvaly	2,0
	pvaly	1,1
	pvaly	0,2
	dall	
	execsot	3,1,&4,&0,&1,&2
	last

	.pred	'forgetArgN',3
	.clause
0:	apushx	0
	pushi	$$0
	jpred	4,&7
	glvx2	1,3,1
	gl	2
	uvalx	3
	uvara	2
	apushx	0
	afunc	47
	popx	0
	exec	3,&'forgetArgN'/3
7: 	glvx2	1,255,1
	gl	2
	uvoid	1
	uvalx	1
	pro	
8: 	last

	.pred	'forgetArgNList',3
3: 	sot	1,&4,&0,&1,&2
4: 	sot	2,&5,&0,&1,&2
5: 	mkdel	3,&3
	mark	2
	mark	1
	delay	
2: 	fail	
	.clause
0:	gnil	1
	gnil	2
	pro	
	.clause
1:	all	3
	gvary	2,0
	gl	1
	uvara	1
	uvary	1
	gl	2
	uvara	2
	uvary	0
	pvaly	2,0
	call	3,3,&'forgetArgN'/3
	pvaly	2,0
	pvaly	1,1
	pvaly	0,2
	dall	
	execsot	3,1,&4,&0,&1,&2
	last

	.pred	'extendListList',3
3: 	sot	1,&4,&0,&1,&2
4: 	sot	2,&5,&0,&1,&2
5: 	mkdel	3,&3
	mark	2
	mark	1
	delay	
2: 	fail	
	.clause
0:	gnil	1
	gnil	2
	pro	
	.clause
1:	all	6
	gvary	2,0
	gl	1
	uvary	5
	uvary	1
	gl	2
	uvary	3
	uvary	0
	pvary	4,0
	pvaly	2,1
	call	6,2,&'length'/2
	pvaly	5,0
	puval	4,1
	pvaly	3,2
	call	3,3,&'append'/3
	pvaly	2,0
	pvaly	1,1
	pvaly	0,2
	dall	
	execsot	3,1,&4,&0,&1,&2
	last

	.pred	'filterThings',7
3: 	sot	1,&4,&0,&1,&2
4: 	sot	2,&5,&0,&1,&2
5: 	mkdel	7,&3
	mark	2
	mark	1
	delay	
2: 	fail	
	.clause
0:	gnil	1
	gnil	2
	gnil	3
	gnil	4
	gnil	5
	gnil	6
	pro	
	.clause
1:	all	9
	gvary	1,0
	gl	1
	uvary	0
	uvary	7
	gl	2
	uvara	1
	uvary	6
	gvary	5,3
	gvary	4,4
	gvary	3,5
	gvary	2,6
	pvaly	1,0
	pvary	8,2
	call	9,3,&'nth0'/3
	puval	8,0
	pvaly	7,1
	pvaly	6,2
	pvaly	5,3
	pvaly	4,4
	pvaly	3,5
	pvaly	2,6
	pvaly	1,7
	pvaly	0,8
	dallexe	9,&'filterThings'/9
	last

	.pred	'filterThings',9
4: 	sot	0,&0,&1,&2,&3
	.clause
0:	typx	0,3
	gl	3
	ulvx	8
	uvara	3
	gvara	0,7
	exec	7,&'filterThings'/7
	.clause
1:	typx	0,12
	gl	4
	ulvx	8
	uvara	4
	gvara	0,7
	exec	7,&'filterThings'/7
	.clause
2:	typx	0,48
	gl	5
	ulvx	8
	uvara	5
	gvara	0,7
	exec	7,&'filterThings'/7
	.clause
3:	typx	0,64
	gl	6
	ulvx	8
	uvara	6
	gvara	0,7
	exec	7,&'filterThings'/7
	last

	.pred	'filterHeads',6
	.clause
0:	apushx	0
	afunc	46
	popx	0
	exec	6,&'filterHeads1'/6
	last

	.pred	'filterHeads1',6
3: 	sot	1,&4,&0,&1,&2
4: 	mkdel	6,&3
	mark	1
	delay	
2: 	fail	
	.clause
0:	gnil	1
	gnil	2
	gnil	3
	gnil	4
	gnil	5
	pro	
	.clause
1:	gvarx	6,0
	glvx2	1,7,1
	gs	7,$'clause'/5
	uvoid	2
	uvarx	8
	uvoid	2
	arg	6,8,0
	exec	8,&'filterHeads'/8
	last

	.pred	'filterHeads',8
4: 	sot	0,&0,&1,&2,&3
	.clause
0:	typx	0,3
	gl	2
	ulvx	7
	uvara	2
	gvara	0,6
	exec	6,&'filterHeads1'/6
	.clause
1:	typx	0,12
	gl	3
	ulvx	7
	uvara	3
	gvara	0,6
	exec	6,&'filterHeads1'/6
	.clause
2:	typx	0,48
	gl	4
	ulvx	7
	uvara	4
	gvara	0,6
	exec	6,&'filterHeads1'/6
	.clause
3:	typx	0,64
	gl	5
	ulvx	7
	uvara	5
	gvara	0,6
	exec	6,&'filterHeads1'/6
	last

	.pred	'selectFilter',6
	labelx	6
2: 	t	7,0,&0
	tr	7,0,&1
	.clause
0:	all	8
	gvary	6,0
	gvary	5,1
	gvary	4,2
	gvary	3,3
	gvary	2,4
	gvary	1,5
	gvary	0,6
	pvaly	4,255
	glvx2	255,0,255
	pvary	7,1
	call	8,2,&'length'/2
	pvaly	3,0
	pvaly	2,1
	pvaly	1,2
	call	8,3,&'selectFilter1'/3
	apushy	7
	afunc	47
	popx	1
	pc	0,$0
	pvaly	6,2
	call	7,3,&'between'/3
	pvaly	6,0
	pvaly	5,1
	pvaly	4,2
	pnil	3
	pvaly	3,4
	pvaly	2,5
	pvaly	1,6
	call	1,7,&'filterThings'/7
	cuty	0
	dallpro	
	.clause
1:	all	8
	gvary	6,0
	gvary	5,1
	gvary	4,2
	gvary	3,3
	gvary	2,4
	gvary	1,5
	gvary	0,6
	pvaly	4,255
	glvx2	255,0,255
	pvary	7,1
	call	8,2,&'length'/2
	apushy	7
	afunc	47
	popx	1
	pc	0,$0
	pvaly	6,2
	call	7,3,&'between'/3
	pvaly	6,0
	pvaly	5,1
	pvaly	4,2
	pnil	3
	pvaly	3,4
	pvaly	2,5
	pvaly	1,6
	call	1,7,&'filterThings'/7
	cuty	0
	dallpro	
	last

	.pred	'selectFilter1',3
7: 	sot	0,&8,&6,&0,&4
8: 	sot	1,&9,&5,&1,&4
9: 	sot	2,&10,&3,&2,&4
10: 	mkdel	3,&7
	mark	2
	mark	1
	mark	0
	delay	
3: 	t	3,0,&0
	tr	3,0,&1
4: 	fail	
5: 	t	3,0,&0
	tr	3,0,&2
6: 	t	3,0,&1
	tr	3,0,&2
	.clause
0:	glvx2	0,255,255
	gnil	1
	gnil	2
	pro	
	.clause
1:	gnil	0
	glvx2	1,255,255
	gnil	2
	pro	
	.clause
2:	gnil	0
	gnil	1
	glvx2	2,255,255
	pro	
	last

	.pred	'compileWhens',4
	labelx	4
2: 	t	5,0,&0
	tr	5,0,&1
	.clause
0:	all	7
	gvary	2,0
	gvary	1,2
	gs	3,$'+'/2
	uvarx	5
	uvary	3
	gs	5,$'$'/1
	uvary	6
	gvary	0,4
	pc	5,$'no'
	idtest	1,5
	jfail	&13
	pc	255,$'nop'
	gvary	4,255
	j	&14
13: 	gsx1	1,5,$'yes'/1
	pvary	4,255
	gs	255,$'label'/1
	us	255,$'temp'/1
	uvalx	5
14: 	pvaly	2,0
	pvary	5,1
	call	7,2,&'stripLineNumbersFromWhens'/2
	ps	0,$'compileWhens'/5
	uvaly	6
	ulvy	5
	uvaly	4
	ulvy	1
	uvaly	3
	ps	5,$'unableToCompileWhens'/2
	ulvy	2
	ulvy	1
	ps	2,$','/2
	uvalx	5
	us	255,$'call'/1
	uvara	1
	call	1,3,&'catchCompilerError'/3
	cuty	0
	dallpro	
	.clause
1:	gvara	1,2
	all	0
	call	0,2,&'unableToCompileWhens'/2
	fail	
	last

	.pred	'stripLineNumbersFromWhens',2
3: 	sot	0,&4,&0,&1,&2
4: 	sot	1,&5,&0,&1,&2
5: 	mkdel	2,&3
	mark	1
	mark	0
	delay	
2: 	fail	
	.clause
0:	gnil	0
	gnil	1
	pro	
	.clause
1:	glvx2	0,2,0
	gs	2,$'when'/3
	uvoid	1
	uvarx	2
	uvarx	3
	glvx2	1,4,1
	gs	4,$'when'/2
	uvalx	2
	uvalx	3
	execsot	2,0,&4,&0,&1,&2
	last

	.pred	'unableToCompileWhens',2
	.clause
0:	gvarx	2,0
	labelx	0
6: 	te	3,0,3,&7
	glvx2	1,3,255
	gs	3,$'clause'/5
	uvoid	2
	uvarx	3
	uvoid	2
	cutx	0
	pvarx	0,0
	pvarx	4,4
	functor	3,0,4
	j	&8
7: 	tre	3,0
	pc	0,$'?'
8: 	pc	3,$'user_error'
	pc	4,#(CHR,&5)
	sputl	3,4
	gvara	1,2
	exec	2,&'writeWhens'/2
	last
5: 	.string	"Unable to compile the following when declarations.\n"

	.pred	'writeWhens',2
2: 	t	2,0,&0
	tr	2,0,&1
	.clause
0:	gnil	1
	pro	
	.clause
1:	all	5
	gvary	1,0
	gl	1
	uvarx	2
	uvary	0
	gs	2,$'when'/3
	uvary	2
	uvarx	2
	uvary	3
	pvary	4,3
	pl	4
	ulvy	1
	uvalx	2
	univ	3,4
14: 	te	0,0,0,&15
	ps	0,$'when'/2
	ulvy	4
	uvaly	3
	pc	1,$1
	pvarx	2,2
	call	5,3,&'numberVars'/3
	pc	1,#(CHR,&11)
	ps	3,$':-'/1
	us	255,$'when'/2
	ulvy	4
	uvaly	3
	pl	2
	uvaly	2
	ul	255
	uvalx	3
	uc	$[]
	pc	0,$'user_error'
	call	2,3,&'$format'/3
	fail	
15: 	tre	0,0
16: 	pvaly	1,0
	pvaly	0,1
	dallexe	2,&'writeWhens'/2
	last
11: 	.string	"~t~d~+: ~w.~n"

	.pred	'compileWhens',5
	labelx	5
3: 	t	6,0,&0
	r	6,0,&1
	tr	6,0,&2
	.clause
0:	gnil	1
	gvara	1,4
	cutx	5
	ps	0,$'clauses'/2
	ulvx	3
	uvoid	1
	exec	2,&'indexHeads'/2
	.clause
1:	all	16
	gvary	15,1
	gvary	3,2
	gvary	12,3
	gs	4,$'+'/2
	ulvy	3
	us	255,$'sot'/5
	uvary	5
	uvarx	6
	uvary	9
	uvary	6
	uvary	0
	gs	6,$'delay'/2
	uvarx	6
	ulvx	0
	gl	6
	uvaly	5
	uc	$[]
	gvary	13,5
	pvaly	15,0
	pvary	14,1
	pvarx	2,2
	call	16,3,&'splitWhens'/3
	pvaly	5,0
	pvaly	15,1
	puval	14,2
	pvary	11,3
	pvary	8,4
	pvary	4,5
	call	14,6,&'selectFilter'/6
	cuty	13
	pvaly	5,0
	pvaly	12,1
	pvary	2,2
	pvary	10,3
	pvary	7,4
	pvary	1,5
	call	12,6,&'filterHeads'/6
	pvaly	5,0
	puval	11,1
	pvaly	3,2
	pvaly	2,3
	puval	10,4
	pvaly	9,5
	call	9,6,&'compileConstantWhens'/6
	pvaly	5,0
	puval	8,1
	pvaly	3,2
	pvaly	2,3
	puval	7,4
	pvaly	6,5
	call	6,6,&'compileListWhens'/6
	pvaly	5,0
	puval	4,1
	pvaly	3,2
	puval	2,3
	puval	1,4
	pvaly	0,5
	dallexe	6,&'compileStructWhens'/6
	.clause
2:	all	6
	gvary	3,0
	gvara	0,1
	gvary	1,2
	gvary	4,3
	gvary	0,4
	pl	1
	uvary	5
	uc	$[]
	pl	2
	uvary	2
	uc	$[]
	call	6,3,&'splitWhens'/3
	pc	0,$0
	pvaly	5,1
	call	5,2,&'co$numberWhenDeclVars'/2
	pvaly	2,0
	call	5,1,&'co$checkWhenBody'/1
	ps	6,$'clauses'/2
	ulvy	4
	uvoid	1
	pvaly	3,0
	pvaly	2,1
	pc	2,$'go'
	pnil	3
	pc	4,$255
	pvaly	1,5
	pvaly	0,7
	dallexe	8,&'compileWhen'/8
	last

	.pred	'co$numberWhenDeclVars',2
3: 	sot	1,&4,&0,&1,&2
4: 	mkdel	2,&3
	mark	1
	delay	
2: 	fail	
	.clause
0:	gnil	1
	pro	
	.clause
1:	glvx2	1,2,1
	gs	2,$'vr'/1
	ulvx	0
	apushx	0
	afunc	46
	popx	0
	execsot	2,1,&4,&0,&1,&2
	last

	.pred	'co$checkWhenBody',1
	labelx	1
7: 	sot	0,&0,&3,&6,&8
6: 	fail	
8: 	sos	0,&($'and'/2:&4,$'ground'/1:&2,$'or'/2:&5,$'vr'/1:&1),&6
	.clause
0:	typx	0,3
	cutx	1
	fail	
	.clause
1:	gsx1	0,2,$'vr'/1
	ctypx	2,17
	pro	
	.clause
2:	gs	0,$'ground'/1
	us	255,$'vr'/1
	uvarx	2
	ctypx	2,17
	pro	
	.clause
3:	gc	0,$'ever'
	pro	
	.clause
4:	gs	0,$'and'/2
	uvara	0
	all	1
	uvary	0
	call	1,1,&'co$checkWhenBody'/1
	pvaly	0,0
	dallexe	1,&'co$checkWhenBody'/1
	.clause
5:	gs	0,$'or'/2
	uvara	0
	all	1
	uvary	0
	call	1,1,&'co$checkWhenBody'/1
	pvaly	0,0
	dallexe	1,&'co$checkWhenBody'/1
	last

	.pred	'compileWhen',8
9: 	sot	1,&10,&11,&7,&12
10: 	mkdel	8,&9
	mark	1
	delay	
11: 	soc	1,&($'ever':&3,$'go':&0),&7
7: 	fail	
12: 	sos	1,&($'and'/2:&4,$'ground'/1:&2,$'or'/2:&8,$'vr'/1:&1),&7
8: 	t	8,0,&5
	tr	8,0,&6
	.clause
0:	gc	1,$'go'
	gc	2,$'go'
	gs	7,$'delay'/2
	ulvx	3
	ulvx	0
	pro	
	.clause
1:	gs	1,$'vr'/1
	all	5
	uvary	4
	gvara	1,2
	gvarx	8,3
	gvary	2,5
	gvary	1,6
	gvary	0,7
	pl	3
	uvaly	4
	ulvx	8
	pc	2,$'go'
	pvaly	2,5
	pvaly	1,6
	pvary	3,7
	call	5,8,&'compileWhen'/8
	pvaly	4,0
	puval	3,1
	pvaly	2,2
	pvaly	1,3
	pvaly	0,4
	dallexe	5,&'compileSOT'/5
	.clause
2:	all	7
	gvary	4,0
	gs	1,$'ground'/1
	us	255,$'vr'/1
	uvara	0
	gvary	3,2
	gvary	5,3
	gvary	6,4
	gvary	2,5
	gvary	1,6
	gs	7,$'+'/2
	uvarx	8
	us	255,$'jv'/3
	ulvy	6
	uvary	0
	uvara	4
	gs	8,$'fvar'/2
	uvalx	0
	ulvy	6
	pc	1,$'fail'
	pvaly	2,2
	pvaly	1,3
	call	7,5,&'compileSOT'/5
	apushy	6
	afunc	47
	popx	4
	pl	3
	ulvy	6
	ulvy	5
	pvaly	4,0
	pvaly	3,1
	pc	2,$'go'
	pvaly	2,5
	pvaly	1,6
	pvaly	0,7
	dall	
	execsot	8,1,&10,&11,&7,&12
	.clause
3:	gc	1,$'ever'
	gc	2,$'go'
	gnil	3
	gs	7,$'+'/2
	ulvx	5
	ulvx	6
	pro	
	.clause
4:	gs	1,$'and'/2
	uvara	1
	all	8
	uvary	6
	gvary	5,2
	gvary	4,3
	gvary	3,4
	gvary	2,5
	gvary	1,6
	gs	7,$'+'/2
	uvarx	8
	uvary	0
	gs	8,$'+'/2
	uvara	7
	us	255,$'$'/1
	uvary	7
	ps	6,$'j'/1
	uvaly	7
	pvaly	5,2
	pvaly	4,3
	pvaly	3,4
	pvaly	2,5
	call	8,8,&'compileWhen'/8
	pvaly	7,0
	pvaly	6,1
	pvaly	5,2
	pvaly	4,3
	pvaly	3,4
	pvaly	2,5
	pvaly	1,6
	pvaly	0,7
	dall	
	execsot	8,1,&10,&11,&7,&12
	.clause
5:	gsx2	1,1,8,$'or'/2
	gc	2,$'go'
	gvara	2,8
	execsot	8,1,&10,&11,&7,&12
	.clause
6:	gsx2	1,1,8,$'or'/2
	gvarx	9,2
	pc	10,$'go'
	notid	9,10
	ps	2,$'or'/2
	ulvx	9
	uvalx	8
	execsot	8,1,&10,&11,&7,&12
	last

	.pred	'compileSOT',5
	labelx	5
3: 	t	6,0,&0
	r	6,0,&1
	tr	6,0,&2
	.clause
0:	all	12
	gvary	3,0
	gsx2	3,6,255,$'clauses'/2
	gs	4,$'+'/2
	ulvx	2
	us	255,$'sot'/5
	ulvy	3
	ulvx	1
	uvary	7
	uvary	4
	uvary	0
	gvary	10,5
	gl	6
	uvoid	1
	ul	255
	uvoid	2
	pvaly	3,0
	gvara	1,6
	pvary	11,2
	pvary	8,3
	pvary	5,4
	pvary	1,5
	call	12,6,&'filterHeads'/6
	pvaly	3,0
	pvarx	1,1
	pc	2,$'const'
	pvaly	11,3
	pvary	9,4
	call	12,5,&'headOpt'/5
	pl	2
	uvoid	2
	pvaly	3,0
	pvarx	1,1
	pvaly	11,3
	pvary	6,4
	call	12,5,&'headOpt'/5
	ps	2,$'struct'/1
	uvoid	1
	pvaly	3,0
	pvarx	1,1
	pvaly	11,3
	pvary	2,4
	call	12,5,&'headOpt'/5
43: 	te	0,0,0,&44
	typy	8,48
	j	&49
44: 	re	0,0,&45
	typy	5,48
	j	&49
45: 	re	0,0,&46
	typy	1,48
	j	&49
46: 	re	0,0,&47
	puval	11,6
	puval	9,7
	notid	6,7
	j	&49
47: 	re	0,0,&48
	puval	11,6
	pvaly	6,7
	notid	6,7
	j	&49
48: 	tre	0,0
	puval	11,6
	pvaly	2,7
	notid	6,7
49: 	cuty	10
	pvaly	3,0
	puval	9,1
	puval	8,2
	pvaly	7,3
	call	7,4,&'indexConstantHeads'/4
	pvaly	3,0
	puval	6,1
	puval	5,2
	pvaly	4,3
	call	4,4,&'indexListHeads'/4
	pvaly	3,0
	puval	2,1
	puval	1,2
	pvaly	0,3
	dallexe	4,&'indexStructHeads'/4
	.clause
1:	gc	1,$'fail'
	cutx	5
	labelx	0
56: 	te	5,0,5,&57
	gsx2	3,6,255,$'clauses'/2
	glvx2	6,255,255
	cutx	0
	gs	4,$'+'/2
	ulvx	2
	ulvx	3
	pro	
57: 	tre	5,0
	gvalx	3,4
	pro	
58: 	.clause
2:	labelx	5
65: 	te	5,0,6,&66
	gsx2	3,6,255,$'clauses'/2
	glvx2	6,255,255
	cutx	5
	gs	4,$'+'/2
	ulvx	2
	us	255,$'jv'/3
	ulvx	0
	ulvx	1
	ulvx	3
	pro	
66: 	tre	5,0
	gs	4,$'jv'/3
	ulvx	0
	ulvx	1
	ulvx	3
	pro	
67: 	last

	.pred	'indexHeads',2
	labelx	2
3: 	sot	0,&2,&1,&1,&4
2: 	t	3,0,&0
	tr	3,0,&1
4: 	js	0,$'clauses'/2,&2
	j	&1
	j	&2
	.clause
0:	gs	0,$'clauses'/2
	all	13
	uvary	12
	uvoid	1
	gs	1,$'sot'/5
	uc	$0
	uvarx	3
	uvary	6
	uvary	3
	uvary	0
	gs	3,$'clauses'/2
	uvary	11
	uvoid	1
	gvary	9,2
	pvaly	12,255
	gl	255
	uvoid	1
	ul	255
	uvoid	2
	pc	0,$0
	pvaly	12,1
	pvary	10,2
	pvary	7,3
	pvary	4,4
	pvary	1,5
	call	13,6,&'filterHeads'/6
	pc	0,$0
	pc	1,$'+'
	pvarx	2,2
	pvaly	12,3
	pvaly	11,4
	call	13,5,&'headOpt'/5
	pc	0,$0
	pvarx	1,1
	pc	2,$'const'
	pvaly	10,3
	pvary	8,4
	call	13,5,&'headOpt'/5
	pl	2
	uvoid	2
	pc	0,$0
	pvarx	1,1
	pvaly	10,3
	pvary	5,4
	call	13,5,&'headOpt'/5
	ps	2,$'struct'/1
	uvoid	1
	pc	0,$0
	pvarx	1,1
	pvaly	10,3
	pvary	2,4
	call	13,5,&'headOpt'/5
46: 	te	0,0,0,&47
	typy	7,48
	j	&53
47: 	re	0,0,&48
	typy	4,48
	j	&53
48: 	re	0,0,&49
	typy	1,48
	j	&53
49: 	re	0,0,&50
	pvaly	12,3
	pvaly	11,4
	notid	3,4
	j	&53
50: 	re	0,0,&51
	puval	10,3
	puval	8,4
	notid	3,4
	j	&53
51: 	re	0,0,&52
	puval	10,3
	pvaly	5,4
	notid	3,4
	j	&53
52: 	tre	0,0
	puval	10,3
	pvaly	2,4
	notid	3,4
53: 	cuty	9
	pc	0,$0
	puval	8,1
	puval	7,2
	pvaly	6,3
	call	6,4,&'indexConstantHeads'/4
	pc	0,$0
	puval	5,1
	puval	4,2
	pvaly	3,3
	call	3,4,&'indexListHeads'/4
	pc	0,$0
	puval	2,1
	puval	1,2
	pvaly	0,3
	dallexe	4,&'indexStructHeads'/4
	.clause
1:	gvalx	0,1
	pro	
	last

	.pred	'compileConstantWhens',6
	.clause
0:	all	8
	gvary	3,0
	gvary	6,1
	gvary	1,2
	gvary	0,3
	gvary	7,4
	gvary	4,5
	pvaly	3,0
	pvaly	6,1
	pvaly	7,2
	pvary	2,3
	pvarx	4,4
	call	8,5,&'sortConstantWhens'/5
	pvaly	0,6
	pnil	7
	idtest	6,7
	jfail	&24
	pvaly	4,255
	gs	255,$'soce'/3
	ulvy	3
	uvarx	6
	uvara	4
	gs	6,$'clauses'/2
	uc	$[]
	uvoid	1
	pvaly	3,0
	puval	2,1
	pvaly	1,2
	pvaly	0,3
	dallexe	5,&'constantWhens'/5
24: 	labely	5
25: 	te	0,0,0,&26
	pvaly	7,6
	pnil	7
	id	6,7
	pvaly	3,0
	pvaly	6,1
	call	6,2,&'exhaustedWhens'/2
	cuty	5
	pvaly	4,255
	gs	255,$'clauses'/2
	ulvy	0
	uvoid	1
	dallpro	
26: 	tre	0,0
	pvaly	4,255
	gs	255,$'soce'/3
	ulvy	3
	uvarx	6
	uvarx	4
	gs	6,$'clauses'/2
	ulvy	0
	uvoid	1
	pvaly	3,0
	puval	2,1
	pvaly	1,2
	pvaly	0,3
	dallexe	5,&'constantWhens'/5
27: 	last

	.pred	'constantWhens',5
2: 	t	5,0,&0
	tr	5,0,&1
	.clause
0:	gnil	1
	gnil	4
	pro	
	.clause
1:	all	13
	gvary	4,0
	gl	1
	uvarx	5
	uvary	3
	gs	5,$'group'/3
	uvarx	5
	uvara	0
	uvary	9
	gvary	2,2
	gvary	1,3
	gl	4
	uvarx	6
	uvary	0
	gs	6,$'entry'/2
	uvalx	5
	us	255,$'+'/2
	uvarx	5
	uvary	5
	gs	5,$'$'/1
	uvary	8
	pvary	12,1
	pvary	10,2
	call	13,3,&'splitWhens'/3
	pvaly	4,0
	puval	12,1
	pvary	11,2
	call	12,3,&'forgetArgNList'/3
	pvary	7,0
	puval	11,1
	puval	10,2
	call	10,3,&'splitWhens'/3
	pvaly	1,0
	pvaly	9,1
	pvary	6,2
	call	9,3,&'mergeHeads'/3
	pvaly	8,0
	puval	7,1
	pvaly	2,2
	puval	6,3
	pvaly	5,4
	call	5,5,&'compileWhens'/5
	pvaly	4,0
	pvaly	3,1
	pvaly	2,2
	pvaly	1,3
	pvaly	0,4
	dallexe	5,&'constantWhens'/5
	last

	.pred	'compileStructWhens',6
	.clause
0:	all	8
	gvary	3,0
	gvary	6,1
	gvary	1,2
	gvary	0,3
	gvary	7,4
	gvary	4,5
	pvaly	3,0
	pvaly	6,1
	pvaly	7,2
	pvary	2,3
	pvarx	4,4
	call	8,5,&'sortStructWhens'/5
	pvaly	0,6
	pnil	7
	idtest	6,7
	jfail	&24
	pvaly	4,255
	gs	255,$'sos'/3
	ulvy	3
	uvarx	6
	uvara	4
	gs	6,$'clauses'/2
	uc	$[]
	uvoid	1
	pvaly	3,0
	puval	2,1
	pvaly	1,2
	pvaly	0,3
	dallexe	5,&'structWhens'/5
24: 	labely	5
25: 	te	0,0,0,&26
	pvaly	7,6
	pnil	7
	id	6,7
	pvaly	3,0
	pvaly	6,1
	call	6,2,&'exhaustedWhens'/2
	cuty	5
	pvaly	4,255
	gs	255,$'clauses'/2
	ulvy	0
	uvoid	1
	dallpro	
26: 	tre	0,0
	pvaly	4,255
	gs	255,$'sose'/3
	ulvy	3
	uvarx	6
	uvarx	4
	gs	6,$'clauses'/2
	ulvy	0
	uvoid	1
	pvaly	3,0
	puval	2,1
	pvaly	1,2
	pvaly	0,3
	dallexe	5,&'structWhens'/5
27: 	last

	.pred	'structWhens',5
2: 	t	5,0,&0
	tr	5,0,&1
	.clause
0:	gnil	1
	gnil	4
	pro	
	.clause
1:	all	32
	gvary	4,0
	gl	1
	uvarx	5
	uvary	3
	gs	5,$'group'/3
	uvarx	5
	uvary	31
	uvary	13
	gs	5,$'/'/2
	uvarx	5
	uvary	23
	gvary	2,2
	gvary	1,3
	gl	4
	uvarx	6
	uvary	0
	gs	6,$'entry'/3
	uvalx	5
	uvaly	23
	us	255,$'gs'/4
	ulvy	4
	uvarx	6
	uvary	28
	us	255,$'+'/2
	uvarx	7
	uvary	5
	gs	6,$'/'/2
	uvalx	5
	uvaly	23
	gs	7,$'$'/1
	uvary	8
	labelx	1
85: 	te	0,0,2,&86
	pvaly	31,255
	glvx2	255,5,255
	gsx2	5,0,255,$'when'/2
	cutx	1
	pvary	29,1
	call	32,2,&'length'/2
	j	&87
86: 	tre	0,0
	pvaly	13,255
	glvx2	255,5,255
	gs	5,$'clause'/5
	uvoid	2
	uvarx	5
	uvoid	2
	pvarx	6,6
	pvary	29,7
	functor	5,6,7
87: 	pvaly	31,0
	pvary	27,1
	pvary	16,2
	call	31,3,&'splitWhens'/3
	pvaly	13,0
	pvary	18,1
	pvary	30,2
	call	31,3,&'splitHeads'/3
	puval	30,0
	pvary	15,1
	pvary	19,2
	call	30,3,&'termsToArgLists'/3
	pvaly	1,5
	pnil	6
	idtest	5,6
	jfail	&88
	apushy	29
	pushy	23
	afunc	0
	pushi	$$2
	afunc	1
	popx	1
	pvaly	28,255
	gl	255
	ulvy	4
	uvarx	2
	puval	29,0
	call	28,3,&'iotaL'/3
	pvaly	4,0
	puval	27,1
	pvary	17,2
	call	20,3,&'splitArgNList'/3
	pnil	255
	gvary	10,255
	pvaly	4,0
	puval	19,1
	pvary	14,2
	call	19,3,&'splitArgNList'/3
	pvaly	4,0
	puval	18,1
	pvary	12,2
	call	18,3,&'relabel'/3
	j	&89
88: 	apushy	29
	pushy	23
	afunc	0
	afunc	47
	popx	1
	puval	29,0
	pvaly	28,2
	call	28,3,&'iotaL'/3
	pvaly	4,0
	puval	27,1
	pvary	17,2
	call	27,3,&'splitArgNWithResidueList'/3
	pvaly	1,0
	pvary	22,1
	pvary	26,2
	call	27,3,&'splitHeads'/3
	puval	26,0
	pvaly	15,1
	pvary	25,2
	call	26,3,&'termsToArgLists'/3
	pvaly	23,0
	puval	25,1
	pvary	24,2
	call	25,3,&'extendListList'/3
	pvary	20,0
	pvaly	15,1
	puval	24,2
	call	24,3,&'termsToArgLists'/3
	ps	0,$'fill'/1
	uvaly	23
	puval	22,1
	pvary	21,2
	call	22,3,&'relabel'/3
	pvaly	1,0
	puval	21,1
	puval	20,2
	pvary	10,3
	call	20,4,&'reassembleHeads'/4
	pvaly	4,0
	puval	19,1
	pvary	14,2
	call	19,3,&'splitArgNWithResidueList'/3
	ps	0,$'residue'/1
	ulvy	4
	puval	18,1
	pvary	12,2
	call	18,3,&'relabel'/3
89: 	pvary	7,0
	puval	17,1
	puval	16,2
	call	16,3,&'splitWhens'/3
	pvary	11,0
	puval	15,1
	puval	14,2
	call	14,3,&'termsToArgLists'/3
	pvaly	13,0
	puval	12,1
	puval	11,2
	pvary	9,3
	call	11,4,&'reassembleHeads'/4
	puval	10,0
	puval	9,1
	pvary	6,2
	call	9,3,&'mergeHeads'/3
	pvaly	8,0
	puval	7,1
	pvaly	2,2
	puval	6,3
	pvaly	5,4
	call	5,5,&'compileWhens'/5
	pvaly	4,0
	pvaly	3,1
	pvaly	2,2
	pvaly	1,3
	pvaly	0,4
	dallexe	5,&'structWhens'/5
	last

	.pred	'compileListWhens',6
2: 	t	6,0,&0
	tr	6,0,&1
	.clause
0:	gnil	1
	gvara	0,3
	gvara	1,4
	gsx2	5,2,255,$'clauses'/2
	exec	3,&'mergeHeads'/3
	.clause
1:	all	29
	gvary	15,0
	gvary	28,1
	gvary	2,2
	gvary	19,3
	gvary	9,4
	gs	5,$'gl'/3
	ulvy	15
	uvary	25
	us	255,$'+'/2
	uvarx	6
	uvary	0
	gs	6,$'$'/1
	uvary	4
	pvaly	28,255
	glvx2	255,6,255
	gsx2	6,0,255,$'when'/2
	pvary	26,1
	call	29,2,&'length'/2
	pvaly	28,0
	pvary	24,1
	pvary	12,2
	call	28,3,&'splitWhens'/3
	pvaly	9,0
	pvary	14,1
	pvary	27,2
	call	28,3,&'splitHeads'/3
	puval	27,0
	pvary	11,1
	pvary	16,2
	call	27,3,&'termsToArgLists'/3
	pvaly	19,6
	pnil	7
	idtest	6,7
	jfail	&88
	pvaly	25,255
	gl	255
	ulvy	15
	ul	255
	ulvy	26
	uc	$[]
	pvaly	15,0
	puval	24,1
	pvary	13,2
	call	17,3,&'splitArgNList'/3
	pnil	255
	gvary	6,255
	pvaly	15,0
	puval	16,1
	pvary	10,2
	call	16,3,&'splitArgNList'/3
	pvaly	15,0
	puval	14,1
	pvary	8,2
	call	14,3,&'relabel'/3
	j	&89
88: 	apushy	26
	afunc	46
	popx	1
	puval	26,0
	pvaly	25,2
	call	25,3,&'iotaL'/3
	pvaly	15,0
	puval	24,1
	pvary	13,2
	call	24,3,&'splitArgNWithResidueList'/3
	pvaly	19,0
	pvary	20,1
	pvary	23,2
	call	24,3,&'splitHeads'/3
	puval	23,0
	pvaly	11,1
	pvary	22,2
	call	23,3,&'termsToArgLists'/3
	pc	0,$2
	puval	22,1
	pvary	21,2
	call	22,3,&'extendListList'/3
	pvary	17,0
	pvaly	11,1
	puval	21,2
	call	21,3,&'termsToArgLists'/3
	pc	0,#(STR,&59)
	puval	20,1
	pvary	18,2
	call	20,3,&'relabel'/3
	pvaly	19,0
	puval	18,1
	puval	17,2
	pvary	6,3
	call	17,4,&'reassembleHeads'/4
	pvaly	15,0
	puval	16,1
	pvary	10,2
	call	16,3,&'splitArgNWithResidueList'/3
	ps	0,$'residue'/1
	ulvy	15
	puval	14,1
	pvary	8,2
	call	14,3,&'relabel'/3
89: 	pvary	3,0
	puval	13,1
	puval	12,2
	call	12,3,&'splitWhens'/3
	pvary	7,0
	puval	11,1
	puval	10,2
	call	10,3,&'termsToArgLists'/3
	pvaly	9,0
	puval	8,1
	puval	7,2
	pvary	5,3
	call	7,4,&'reassembleHeads'/4
	puval	6,0
	puval	5,1
	pvary	1,2
	call	5,3,&'mergeHeads'/3
	pvaly	4,0
	puval	3,1
	pvaly	2,2
	puval	1,3
	pvaly	0,4
	dallexe	5,&'compileWhens'/5
	last
59: 	.word	$'fill'/1
	.word	$2

	.pred	'exhaustedWhens',2
3: 	sot	1,&4,&0,&1,&2
4: 	mkdel	2,&3
	mark	1
	delay	
2: 	fail	
	.clause
0:	gnil	1
	pro	
	.clause
1:	all	6
	gvary	1,0
	gl	1
	uvarx	2
	uvary	0
	gsx2	2,2,3,$'when'/2
	pc	4,$'ever'
	id	3,4
	labely	2
15: 	te	0,0,3,&18
	pvary	5,0
	pvary	3,1
	call	6,3,&'nth0'/3
	puval	5,2
	pvaly	1,3
	idtest	2,3
	jfail	&16
	pvaly	3,2
	pvarx	3,3
	pvarx	1,1
	functor	2,3,1
	pc	0,$1
	pvary	4,2
	call	5,3,&'between'/3
	puval	4,2
	puval	3,3
	arg	2,3,2
	typx	2,252
	j	&17
16: 	typy	3,252
17: 	cuty	2
	fail	
18: 	tre	0,0
19: 	pvaly	1,0
	pvaly	0,1
	dall	
	execsot	2,1,&4,&0,&1,&2
	last

	.pred	'indexConstantHeads',4
	labelx	4
4: 	t	5,0,&0
	r	5,0,&1
	r	5,0,&2
	tr	5,0,&3
	.clause
0:	gnil	1
	gnil	2
	gs	3,$'clauses'/2
	uc	$[]
	uvoid	1
	cutx	4
	pro	
	.clause
1:	gnil	1
	gs	3,$'clauses'/2
	ulvx	2
	uvoid	1
	gl	2
	uvoid	1
	uc	$[]
	cutx	4
	pro	
	.clause
2:	typx	2,48
	jtypx	1,48,&24
	gs	3,$'soce'/3
	ulvx	0
	uvarx	5
	uvara	3
	gs	5,$'clauses'/2
	ulvx	1
	uvoid	1
	j	&25
24: 	gs	3,$'soc'/3
	ulvx	0
	uvarx	5
	uvara	3
	gs	5,$'clauses'/2
	uc	$[]
	uvoid	1
25: 	cutx	4
	exec	4,&'makeConstantTable'/4
	.clause
3:	gnil	2
	gs	3,$'clauses'/2
	ulvx	1
	uvoid	1
	pro	
	last

	.pred	'indexStructHeads',4
	labelx	4
4: 	t	5,0,&0
	r	5,0,&1
	r	5,0,&2
	tr	5,0,&3
	.clause
0:	gnil	1
	gnil	2
	gs	3,$'clauses'/2
	uc	$[]
	uvoid	1
	cutx	4
	pro	
	.clause
1:	gnil	1
	gs	3,$'clauses'/2
	ulvx	2
	uvoid	1
	gl	2
	uvoid	1
	uc	$[]
	cutx	4
	pro	
	.clause
2:	all	1
	gvary	0,4
	typx	2,48
	jtypx	1,48,&24
	gs	3,$'sose'/3
	ulvx	0
	uvarx	5
	uvara	3
	gs	5,$'clauses'/2
	ulvx	1
	uvoid	1
	j	&25
24: 	gs	3,$'sos'/3
	ulvx	0
	uvarx	5
	uvara	3
	gs	5,$'clauses'/2
	uc	$[]
	uvoid	1
25: 	call	1,4,&'makeStructTable'/4
	cuty	0
	dallpro	
	.clause
3:	gnil	2
	gs	3,$'clauses'/2
	ulvx	1
	uvoid	1
	pro	
	last

	.pred	'indexListHeads',4
	labelx	4
4: 	t	5,0,&0
	r	5,0,&1
	r	5,0,&2
	tr	5,0,&3
	.clause
0:	gnil	1
	gnil	2
	gs	3,$'clauses'/2
	uc	$[]
	uvoid	1
	cutx	4
	pro	
	.clause
1:	gvara	0,1
	gvara	1,2
	gsx2	3,2,255,$'clauses'/2
	typx	0,48
	exec	3,&'mergeHeads'/3
	.clause
2:	gnil	1
	gvara	1,2
	gs	3,$'gl'/3
	ulvx	0
	uvarx	5
	us	255,$'clauses'/2
	uvara	2
	uvoid	1
	gl	5
	ulvx	0
	ul	255
	uvarx	5
	uc	$[]
	gl	1
	uvarx	6
	ul	255
	uvoid	2
	gs	6,$'clause'/5
	uvoid	2
	uvarx	6
	uvoid	2
	pvarx	7,7
	functor	6,7,5
	exec	3,&'splitHeadsOnN'/3
	.clause
3:	gnil	1
	gs	3,$'clauses'/2
	ulvx	2
	uvoid	1
	gl	2
	uvoid	1
	uc	$[]
	pro	
	last

	.pred	'makeConstantTable',4
	.clause
0:	all	4
	gvary	3,0
	gvary	2,1
	gvara	1,2
	gvary	0,3
	pvaly	3,0
	pvary	1,2
	call	4,3,&'sortConstantHeads'/3
	pvaly	3,0
	pvaly	2,1
	puval	1,2
	pvaly	0,3
	dallexe	4,&'makeConstantTable1'/4
	last

	.pred	'makeConstantTable1',4
3: 	sot	2,&4,&0,&1,&2
4: 	sot	3,&5,&0,&1,&2
5: 	mkdel	4,&3
	mark	3
	mark	2
	delay	
2: 	fail	
	.clause
0:	gnil	2
	gnil	3
	pro	
	.clause
1:	all	7
	gvary	3,0
	gvary	2,1
	gl	2
	uvarx	4
	uvary	1
	gs	4,$'group'/2
	uvary	6
	uvara	0
	gl	3
	uvarx	4
	uvary	0
	gs	4,$'entry'/2
	uvaly	6
	us	255,$'clauses'/2
	uvary	4
	uvoid	1
	pvaly	2,1
	pvary	5,2
	call	7,3,&'mergeHeads'/3
	pvaly	3,0
	pc	1,$'+'
	pvaly	6,2
	puval	5,3
	pvaly	4,4
	call	4,5,&'headOpt'/5
	pvaly	3,0
	pvaly	2,1
	pvaly	1,2
	pvaly	0,3
	dall	
	execsot	4,2,&4,&0,&1,&2
	last

	.pred	'makeStructTable',4
	.clause
0:	all	4
	gvary	3,0
	gvary	2,1
	gvara	1,2
	gvary	0,3
	pvaly	3,0
	pvary	1,2
	call	4,3,&'sortStructHeads'/3
	pvaly	3,0
	pvaly	2,1
	puval	1,2
	pvaly	0,3
	dallexe	4,&'makeStructTable1'/4
	last

	.pred	'makeStructTable1',4
3: 	sot	2,&4,&0,&1,&2
4: 	sot	3,&5,&0,&1,&2
5: 	mkdel	4,&3
	mark	3
	mark	2
	delay	
2: 	fail	
	.clause
0:	gnil	2
	gnil	3
	pro	
	.clause
1:	all	7
	gvary	3,0
	gvary	2,1
	gl	2
	uvarx	4
	uvary	1
	gsx2	4,4,0,$'group'/2
	gsx2	4,4,5,$'/'/2
	gl	3
	uvarx	6
	uvary	0
	gs	6,$'entry'/3
	uvalx	4
	uvalx	5
	us	255,$'clauses'/2
	uvary	4
	uvoid	1
	pvary	6,6
	functor	6,4,5
	pvaly	2,1
	pvary	5,2
	call	7,3,&'mergeHeads'/3
	pvaly	3,0
	pc	1,$'+'
	puval	6,2
	puval	5,3
	pvaly	4,4
	call	4,5,&'headOpt'/5
	pvaly	3,0
	pvaly	2,1
	pvaly	1,2
	pvaly	0,3
	dall	
	execsot	4,2,&4,&0,&1,&2
	last

	.pred	'headOpt',5
	.clause
0:	apushx	0
	afunc	46
	popx	0
	exec	5,&'headOpt1'/5
	last

	.pred	'headOpt1',5
3: 	sot	3,&4,&0,&1,&2
4: 	mkdel	5,&3
	mark	3
	delay	
2: 	fail	
	.clause
0:	gnil	3
	gnil	4
	pro	
	.clause
1:	all	14
	gvary	4,0
	gvary	3,1
	gvary	2,2
	gl	3
	uvary	5
	uvary	1
	gvary	6,4
	pvaly	5,255
	gs	255,$'clause'/5
	uvoid	2
	uvary	11
	uvary	8
	uvara	0
	pvaly	4,5
	pvaly	11,6
	arg	5,6,5
	gvary	9,5
	labely	7
	pvary	0,255
30: 	te	0,0,1,&34
	gs	0,$'cut'/1
	uvary	13
	pvaly	4,0
	pvaly	11,1
	call	14,2,&'steadfast'/2
	labely	12
31: 	te	0,0,0,&32
	ps	4,$'steadfast'/2
	ulvy	4
	uvaly	11
	pvaly	9,0
	pvaly	3,1
	pvaly	13,2
	pvaly	2,3
	pvaly	8,5
	call	13,6,&'bodyDoesntCommit'/6
	cuty	12
	fail	
32: 	tre	0,0
33: 	cuty	7
	pvaly	6,255
	gl	255
	uvaly	5
	uc	$[]
	j	&39
34: 	re	0,0,&38
	labely	10
35: 	te	0,0,0,&36
	pvaly	9,0
	pvaly	2,1
	pvaly	11,2
	call	11,3,&'headUnificationUnsafe'/3
	cuty	10
	fail	
36: 	tre	0,0
37: 	pvaly	9,0
	pvaly	3,1
	pvaly	2,2
	pvaly	8,3
	call	8,4,&'bodyImpossible'/4
	cuty	7
	puval	0,255
	gvaly	6,255
	j	&39
38: 	tre	0,0
	pvaly	6,255
	gl	255
	uvaly	5
	ulvy	0
39: 	pvaly	4,0
	pvaly	3,1
	pvaly	2,2
	pvaly	1,3
	puval	0,4
	dall	
	execsot	5,3,&4,&0,&1,&2
	last

	.pred	'steadfast',2
	.clause
0:	all	2
	labely	0
5: 	te	0,0,2,&9
	labely	1
6: 	te	0,0,2,&7
	call	2,2,&'steadfast1'/2
	cuty	1
	fail	
7: 	tre	0,0
8: 	cuty	0
	fail	
9: 	tre	0,0
	dallpro	
10: 	last

	.pred	'steadfast1',2
	.clause
0:	pl	2
	uvoid	1
	uvarx	3
	univ	1,2
	apushx	0
	afunc	47
	popx	0
	gvara	1,3
	all	3
	pvary	2,2
	pvary	1,3
	call	3,4,&'nth0'/4
	jtypy	2,3,&13
	pvaly	2,255
	gc	255,$0
	pc	255,$1
	gvary	0,255
	j	&14
13: 	puval	2,2
	pl	3
	uvoid	1
	uvara	0
	univ	2,3
	pc	1,$0
	pvary	0,2
	call	2,3,&'steadfastNumbering'/3
14: 	puval	1,0
	puval	0,1
	pvarx	2,2
	dallexe	3,&'steadfastNumbering'/3
	last

	.pred	'steadfastNumbering',3
4: 	sot	0,&2,&0,&1,&3
2: 	t	3,0,&0
	tr	3,0,&1
3: 	fail	
	.clause
0:	gnil	0
	gvalx	1,2
	pro	
	.clause
1:	glvx2	0,3,0
	typx	3,3
	gvalx	1,3
	apushx	1
	afunc	46
	popx	1
	execsot	3,0,&2,&0,&1,&3
	last

	.pred	'headUnificationUnsafe',3
	.clause
0:	typx	1,3
	typx	0,3
	pvarx	3,3
	pvarx	0,0
	functor	2,3,0
	all	1
	labely	0
6: 	te	0,0,3,&7
	gvarx	1,2
	call	1,2,&'headUnificationSafe'/2
	cuty	0
	fail	
7: 	tre	0,0
	dallpro	
8: 	last

	.pred	'headUnificationSafe',2
	.clause
0:	apushx	0
	pushi	$$0
	jpred	4,&5
	arg	0,1,2
	typx	2,3
	gvalx	0,2
	apushx	0
	afunc	47
	popx	0
	exec	2,&'headUnificationSafe'/2
5: 	pro	
6: 	last

	.pred	'bodyDoesntCommit',6
	.clause
0:	all	3
	labely	0
13: 	te	0,0,6,&16
	jtypx	3,3,&14
	typx	0,3
	ps	6,$','/2
	uvarx	7
	ulvx	4
	gs	7,$'var'/1
	ulvx	3
	j	&15
14: 	gvarx	6,4
15: 	gvalx	3,0
	labely	2
	gvarx	0,1
	gvarx	1,3
	gvarx	3,6
	gvarx	4,5
	pvary	1,5
	call	3,6,&'bodyCommits'/6
	cuty	2
	puval	1,6
	pc	7,$'true'
	id	6,7
	cuty	0
	fail	
16: 	tre	0,0
	dallpro	
17: 	last

	.pred	'bodyCommits',6
66: 	labelx	6
	sot	4,&67,&68,&36,&69
67: 	mkdel	7,&66
	mark	4
	delay	
68: 	soce	4,&($'fail':&34,$'true':&35),&36
34: 	t	7,0,&0
	tr	7,0,&30
35: 	t	7,0,&0
	tr	7,0,&29
36: 	t	7,0,&0
	tr	7,0,&33
69: 	sose	4,&($'$arithPred'/1:&37,$'$block'/1:&38,$'$cutd'/1:&39,$'$i32'/1:&40,$'$icn'/1:&41,$'$is'/2:&42,$'$list'/1:&43,$'$smallInt'/1:&44,$'$struct'/1:&45,$'$ucn'/1:&46,$','/2:&47,$'->'/2:&48,$';'/2:&49,$'='/2:&50,$'=='/2:&51,$'\\='/2:&52,$'\\=='/2:&53,$'atom'/1:&54,$'atomic'/1:&55,$'compound'/1:&56,$'cons'/1:&57,$'const'/1:&58,$'float'/1:&59,$'functor'/3:&60,$'integer'/1:&61,$'nonvar'/1:&62,$'number'/1:&63,$'term'/1:&64,$'var'/1:&65),&36
37: 	t	7,0,&0
	r	7,0,&31
	tr	7,0,&33
38: 	t	7,0,&0
	tr	7,0,&14
39: 	t	7,0,&0
	r	7,0,&28
	tr	7,0,&33
40: 	t	7,0,&0
	tr	7,0,&16
41: 	t	7,0,&0
	tr	7,0,&7
42: 	t	7,0,&0
	tr	7,0,&32
43: 	t	7,0,&0
	tr	7,0,&19
44: 	t	7,0,&0
	tr	7,0,&9
45: 	t	7,0,&0
	tr	7,0,&22
46: 	t	7,0,&0
	tr	7,0,&8
47: 	t	7,0,&0
	tr	7,0,&1
48: 	t	7,0,&0
	tr	7,0,&4
49: 	t	7,0,&0
	r	7,0,&2
	tr	7,0,&3
50: 	t	7,0,&0
	tr	7,0,&27
51: 	t	7,0,&0
	tr	7,0,&24
52: 	t	7,0,&0
	tr	7,0,&26
53: 	t	7,0,&0
	tr	7,0,&25
54: 	t	7,0,&0
	tr	7,0,&11
55: 	t	7,0,&0
	tr	7,0,&12
56: 	t	7,0,&0
	tr	7,0,&20
57: 	t	7,0,&0
	tr	7,0,&18
58: 	t	7,0,&0
	tr	7,0,&13
59: 	t	7,0,&0
	tr	7,0,&15
60: 	t	7,0,&0
	tr	7,0,&23
61: 	t	7,0,&0
	tr	7,0,&10
62: 	t	7,0,&0
	tr	7,0,&6
63: 	t	7,0,&0
	tr	7,0,&17
64: 	t	7,0,&0
	tr	7,0,&21
65: 	t	7,0,&0
	r	7,0,&5
	tr	7,0,&33
	.clause
0:	typx	5,252
	cutx	6
	pro	
	.clause
1:	all	6
	gvary	5,0
	gvary	4,1
	gvary	3,2
	gvary	2,3
	gs	4,$','/2
	uvara	4
	uvary	1
	gvary	0,5
	cutx	6
	pvaly	5,0
	pvaly	4,1
	pvaly	3,2
	pvaly	2,3
	pvaly	0,5
	call	6,6,&'bodyCommits'/6
	pvaly	5,0
	pvaly	4,1
	pvaly	3,2
	pvaly	2,3
	pvaly	1,4
	pvaly	0,5
	dallexe	6,&'bodyCommits'/6
	.clause
2:	all	7
	gvary	4,0
	gvary	3,1
	gvary	2,2
	gvary	1,3
	gsx2	4,8,7,$';'/2
	gs	8,$'->'/2
	uvara	4
	uvary	5
	gvary	0,5
	cutx	6
	labely	6
121: 	te	8,0,8,&122
	pvaly	4,0
	pvaly	3,1
	pvaly	2,2
	pvaly	1,3
	pvaly	0,5
	call	7,6,&'bodyCommits'/6
	cuty	6
	pvaly	4,0
	pvaly	3,1
	pvaly	2,2
	pvaly	1,3
	pvaly	5,4
	pvaly	0,5
	dallexe	6,&'bodyCommits'/6
122: 	tre	8,0
	pvaly	4,0
	pvaly	3,1
	pvaly	2,2
	pvaly	1,3
	gvara	4,7
	pvaly	0,5
	dallexe	6,&'bodyCommits'/6
123: 	.clause
3:	gsx2	4,4,7,$';'/2
	cutx	6
143: 	te	8,0,8,&144
	exec	6,&'bodyCommits'/6
144: 	tre	8,0
	gvara	4,7
	exec	6,&'bodyCommits'/6
145: 	.clause
4:	all	7
	gvary	5,0
	gvary	4,1
	gvary	3,2
	gvary	2,3
	gs	4,$'->'/2
	uvara	4
	uvary	1
	gvary	0,5
	cutx	6
	labely	6
165: 	te	0,0,5,&166
	pvaly	5,0
	pvaly	4,1
	pvaly	3,2
	pvaly	2,3
	pvaly	0,5
	call	7,6,&'bodyCommits'/6
	cuty	6
	pvaly	5,0
	pvaly	4,1
	pvaly	3,2
	pvaly	2,3
	pvaly	1,4
	pvaly	0,5
	dallexe	6,&'bodyCommits'/6
166: 	tre	0,0
	dallpro	
167: 	.clause
5:	gsx1	4,7,$'var'/1
	id	7,1
	cutx	6
	typx	7,3
	pro	
	.clause
6:	gsx1	4,0,$'nonvar'/1
	cutx	6
	jtypx	0,3,&182
	notid	0,1
	gc	5,$'short'
	pro	
182: 	pro	
183: 	.clause
7:	gsx1	4,2,$'$icn'/1
	cutx	6
	jtypx	0,3,&191
	j	&192
191: 	jtypx	2,3,&193
	idtest	2,1
	jtrue	&193
192: 	gc	5,$'short'
	pro	
193: 	typx	2,4
	pro	
194: 	.clause
8:	gsx1	4,1,$'$ucn'/1
	cutx	6
	jtypx	0,3,&202
	j	&203
202: 	jtypx	1,3,&204
	pvarx	7,7
	idtest	1,7
	jtrue	&204
203: 	gc	5,$'short'
	pro	
204: 	typx	1,8
	pro	
205: 	.clause
9:	gsx1	4,1,$'$smallInt'/1
	cutx	6
	jtypx	0,3,&214
	j	&215
214: 	jtypx	1,3,&216
	pvarx	7,7
	idtest	1,7
	jtrue	&216
215: 	gc	5,$'short'
	pro	
216: 	gvara	0,1
	exec	1,&'$smallInt'/1
217: 	.clause
10:	gsx1	4,1,$'integer'/1
	cutx	6
	jtypx	0,3,&225
	j	&226
225: 	jtypx	1,3,&227
	pvarx	7,7
	idtest	1,7
	jtrue	&227
226: 	gc	5,$'short'
	pro	
227: 	ctypx	1,17
	pro	
228: 	.clause
11:	gsx1	4,1,$'atom'/1
	cutx	6
	jtypx	0,3,&236
	j	&237
236: 	jtypx	1,3,&238
	pvarx	7,7
	idtest	1,7
	jtrue	&238
237: 	gc	5,$'short'
	pro	
238: 	ctypx	1,2
	pro	
239: 	.clause
12:	gsx1	4,1,$'atomic'/1
	cutx	6
	jtypx	0,3,&247
	j	&248
247: 	jtypx	1,3,&249
	pvarx	7,7
	idtest	1,7
	jtrue	&249
248: 	gc	5,$'short'
	pro	
249: 	ctypx	1,51
	pro	
250: 	.clause
13:	gsx1	4,0,$'const'/1
	cutx	6
	jtypx	0,3,&258
	idtest	0,1
	jtrue	&258
	gc	5,$'short'
	pro	
258: 	typx	0,12
	pro	
259: 	.clause
14:	gsx1	4,1,$'$block'/1
	cutx	6
	jtypx	0,3,&267
	j	&268
267: 	jtypx	1,3,&269
	pvarx	7,7
	idtest	1,7
	jtrue	&269
268: 	gc	5,$'short'
	pro	
269: 	ctypx	1,8
	pro	
270: 	.clause
15:	gsx1	4,1,$'float'/1
	cutx	6
	jtypx	0,3,&278
	j	&279
278: 	jtypx	1,3,&280
	pvarx	7,7
	idtest	1,7
	jtrue	&280
279: 	gc	5,$'short'
	pro	
280: 	ctypx	1,32
	pro	
281: 	.clause
16:	gsx1	4,1,$'$i32'/1
	cutx	6
	jtypx	0,3,&289
	j	&290
289: 	jtypx	1,3,&291
	pvarx	7,7
	idtest	1,7
	jtrue	&291
290: 	gc	5,$'short'
	pro	
291: 	ctypx	1,16
	pro	
292: 	.clause
17:	gsx1	4,1,$'number'/1
	cutx	6
	jtypx	0,3,&300
	j	&301
300: 	jtypx	1,3,&302
	pvarx	7,7
	idtest	1,7
	jtrue	&302
301: 	gc	5,$'short'
	pro	
302: 	ctypx	1,49
	pro	
303: 	.clause
18:	gsx1	4,0,$'cons'/1
	cutx	6
	jtypx	0,3,&311
	idtest	0,1
	jtrue	&311
	gc	5,$'short'
	pro	
311: 	typx	0,48
	pro	
312: 	.clause
19:	gsx1	4,0,$'$list'/1
	cutx	6
	jtypx	0,3,&320
	notid	0,1
	j	&321
320: 	typx	0,48
321: 	gc	5,$'short'
	pro	
	.clause
20:	gsx1	4,0,$'compound'/1
	cutx	6
	jtypx	0,3,&329
	idtest	0,1
	jtrue	&329
	gc	5,$'short'
	pro	
329: 	typx	0,112
	pro	
330: 	.clause
21:	gsx1	4,0,$'term'/1
	cutx	6
	jtypx	0,3,&338
	idtest	0,1
	jtrue	&338
	gc	5,$'short'
	pro	
338: 	typx	0,112
	pro	
339: 	.clause
22:	gsx1	4,0,$'$struct'/1
	cutx	6
	jtypx	0,3,&347
	idtest	0,1
	jtrue	&347
	gc	5,$'short'
	pro	
347: 	typx	0,64
	pro	
348: 	.clause
23:	gs	4,$'functor'/3
	uvara	1
	uvara	2
	uvara	4
	cutx	6
	all	1
	jtypx	0,252,&361
	jtypx	1,252,&357
	j	&358
357: 	jtypx	2,252,&361
	jtypx	4,252,&361
358: 	functor	1,2,4
	labely	0
359: 	te	6,0,6,&360
	gvara	0,3
	call	1,1,&'call'/1
	cuty	0
	dallpro	
360: 	tre	6,0
	gc	5,$'short'
	dallpro	
	j	&362
361: 	gc	5,$'short'
	dallpro	
362: 	.clause
24:	all	5
	gvary	4,0
	gs	4,$'=='/2
	uvary	2
	uvary	1
	gvary	0,5
	cutx	6
	pvaly	2,0
	pvaly	1,1
	pvary	3,2
	call	5,3,&'termCompare'/3
	jtypy	3,3,&375
	pvaly	0,255
	gc	255,$'short'
	dallpro	
375: 	jtypy	4,252,&376
	puval	3,7
	pc	8,$'='
	id	7,8
	dallpro	
376: 	pvaly	2,0
	pvaly	1,1
	call	1,2,&'sameType'/2
	pvaly	0,255
	gc	255,$'short'
	dallpro	
377: 	.clause
25:	all	6
	gvary	5,0
	gs	4,$'\\=='/2
	uvary	3
	uvary	2
	gvary	0,5
	cutx	6
	pvaly	3,0
	pvaly	2,1
	pvary	4,2
	call	6,3,&'termCompare'/3
	jtypy	4,3,&390
	pvaly	0,255
	gc	255,$'short'
	dallpro	
390: 	jtypy	5,252,&391
	puval	4,7
	pc	8,$'='
	notid	7,8
	dallpro	
391: 	labely	1
392: 	te	0,0,0,&393
	pvaly	3,0
	pvaly	2,1
	call	2,2,&'sameType'/2
	cuty	1
	pvaly	0,255
	gc	255,$'short'
	dallpro	
393: 	tre	0,0
	dallpro	
394: 	.clause
26:	all	6
	gvary	5,0
	gs	4,$'\\='/2
	uvary	3
	uvary	2
	gvary	0,5
	cutx	6
	pvaly	3,0
	pvaly	2,1
	pvary	4,2
	call	6,3,&'termCompare'/3
	jtypy	4,3,&407
	pvaly	0,255
	gc	255,$'short'
	dallpro	
407: 	jtypy	5,252,&408
	puval	4,7
	pc	8,$'='
	notid	7,8
	dallpro	
408: 	labely	1
409: 	te	0,0,0,&410
	pvaly	3,0
	pvaly	2,1
	call	2,2,&'sameType'/2
	cuty	1
	pvaly	0,255
	gc	255,$'short'
	dallpro	
410: 	tre	0,0
	dallpro	
411: 	.clause
27:	all	3
	gvary	2,3
	gsx2	4,2,1,$'='/2
	gvary	0,5
	cutx	6
	jtypx	0,3,&422
	jtypx	2,252,&422
	jtypx	1,252,&422
	gvara	0,2
	call	3,2,&'sameType'/2
	pvaly	0,255
	gc	255,$'short'
	j	&423
422: 	gvalx	1,2
423: 	labely	1
424: 	te	0,0,0,&425
	pvaly	2,0
	call	2,1,&'call'/1
	cuty	1
	dallpro	
425: 	tre	0,0
	pvaly	0,255
	gc	255,$'short'
	dallpro	
426: 	.clause
28:	gsx1	4,7,$'$cutd'/1
	id	2,7
	cutx	6
	gc	5,$'true'
	pro	
	.clause
29:	gc	4,$'true'
	cutx	6
	pro	
	.clause
30:	gc	4,$'fail'
	cutx	6
	fail	
	.clause
31:	gs	4,$'$arithPred'/1
	all	2
	uvary	0
	gvary	1,6
	pvaly	0,7
	fvar	7,255
	typx	255,252
	pvaly	0,0
	call	2,1,&'isExpression'/1
	cuty	1
	pvaly	0,0
	dallexe	1,&'call'/1
	.clause
32:	gsx2	4,1,2,$'$is'/2
	cutx	6
	all	1
	jtypx	0,3,&465
	j	&467
465: 	fvar	1,255
	jtypx	255,252,&467
	j	&468
	j	&467
466: 	jtypx	2,252,&468
	jctypx	2,49,&467
	j	&468
467: 	gc	5,$'short'
	dallpro	
468: 	apushx	1
	popvx	2
	labely	0
469: 	te	6,0,6,&470
	gvara	0,3
	call	1,1,&'call'/1
	cuty	0
	dallpro	
470: 	tre	6,0
	gc	5,$'short'
	dallpro	
471: 	.clause
33:	gc	5,$'short'
	pro	
	last

	.pred	'bodyImpossible',4
	.clause
0:	typx	0,3
	all	1
	labely	0
9: 	te	0,0,4,&10
	gvalx	2,0
	gvarx	0,1
	gvarx	1,2
	gvarx	2,3
	pvarx	3,3
	call	1,4,&'bodyPossible'/4
	cuty	0
	fail	
10: 	tre	0,0
	dallpro	
11: 	last

	.pred	'bodyPossible',4
71: 	labelx	4
	sot	2,&72,&73,&38,&74
72: 	mkdel	5,&71
	mark	2
	delay	
73: 	soce	2,&($'fail':&36,$'true':&37),&38
36: 	t	5,0,&0
	tr	5,0,&32
37: 	t	5,0,&0
	tr	5,0,&31
38: 	t	5,0,&0
	tr	5,0,&35
74: 	sose	2,&($'$arithPred'/1:&39,$'$block'/1:&40,$'$del'/1:&41,$'$i32'/1:&42,$'$icn'/1:&43,$'$is'/2:&44,$'$label'/1:&45,$'$list'/1:&46,$'$ref'/1:&47,$'$smallInt'/1:&48,$'$string'/1:&49,$'$struct'/1:&50,$'$ucn'/1:&51,$','/2:&52,$'->'/2:&53,$';'/2:&54,$'='/2:&55,$'=='/2:&56,$'\\='/2:&57,$'\\=='/2:&58,$'atom'/1:&59,$'atomic'/1:&60,$'compound'/1:&61,$'cons'/1:&62,$'const'/1:&63,$'float'/1:&64,$'functor'/3:&65,$'integer'/1:&66,$'nonvar'/1:&67,$'number'/1:&68,$'term'/1:&69,$'var'/1:&70),&38
39: 	t	5,0,&0
	tr	5,0,&33
40: 	t	5,0,&0
	tr	5,0,&15
41: 	t	5,0,&0
	tr	5,0,&6
42: 	t	5,0,&0
	tr	5,0,&17
43: 	t	5,0,&0
	tr	5,0,&8
44: 	t	5,0,&0
	tr	5,0,&34
45: 	t	5,0,&0
	tr	5,0,&30
46: 	t	5,0,&0
	tr	5,0,&21
47: 	t	5,0,&0
	tr	5,0,&5
48: 	t	5,0,&0
	tr	5,0,&10
49: 	t	5,0,&0
	tr	5,0,&20
50: 	t	5,0,&0
	tr	5,0,&24
51: 	t	5,0,&0
	tr	5,0,&9
52: 	t	5,0,&0
	tr	5,0,&1
53: 	t	5,0,&0
	tr	5,0,&3
54: 	t	5,0,&0
	tr	5,0,&2
55: 	t	5,0,&0
	tr	5,0,&29
56: 	t	5,0,&0
	tr	5,0,&26
57: 	t	5,0,&0
	tr	5,0,&28
58: 	t	5,0,&0
	tr	5,0,&27
59: 	t	5,0,&0
	tr	5,0,&12
60: 	t	5,0,&0
	tr	5,0,&13
61: 	t	5,0,&0
	tr	5,0,&22
62: 	t	5,0,&0
	tr	5,0,&19
63: 	t	5,0,&0
	tr	5,0,&14
64: 	t	5,0,&0
	tr	5,0,&16
65: 	t	5,0,&0
	tr	5,0,&25
66: 	t	5,0,&0
	tr	5,0,&11
67: 	t	5,0,&0
	tr	5,0,&7
68: 	t	5,0,&0
	tr	5,0,&18
69: 	t	5,0,&0
	tr	5,0,&23
70: 	t	5,0,&0
	tr	5,0,&4
	.clause
0:	typx	3,252
	cutx	4
	pro	
	.clause
1:	all	4
	gvary	3,0
	gvary	2,1
	gs	2,$','/2
	uvara	2
	uvary	1
	gvary	0,3
	cutx	4
	pvaly	3,0
	pvaly	2,1
	pvaly	0,3
	call	4,4,&'bodyPossible'/4
	pvaly	3,0
	pvaly	2,1
	pvaly	1,2
	pvaly	0,3
	dallexe	4,&'bodyPossible'/4
	.clause
2:	gsx2	2,2,5,$';'/2
	cutx	4
106: 	te	6,0,6,&107
	exec	4,&'bodyPossible'/4
107: 	tre	6,0
	gvara	2,5
	exec	4,&'bodyPossible'/4
108: 	.clause
3:	all	4
	gvary	3,0
	gvary	2,1
	gs	2,$'->'/2
	uvara	2
	uvary	1
	gvary	0,3
	cutx	4
	pvaly	3,0
	pvaly	2,1
	pvaly	0,3
	call	4,4,&'bodyPossible'/4
	pvaly	3,0
	pvaly	2,1
	pvaly	1,2
	pvaly	0,3
	dallexe	4,&'bodyPossible'/4
	.clause
4:	gsx1	2,5,$'var'/1
	cutx	4
	typx	5,3
	pro	
	.clause
5:	gsx1	2,5,$'$ref'/1
	cutx	4
	typx	5,3
	pro	
	.clause
6:	gsx1	2,5,$'$del'/1
	cutx	4
	typx	5,3
	pro	
	.clause
7:	gsx1	2,0,$'nonvar'/1
	cutx	4
	jtypx	0,3,&142
	notid	1,0
	pro	
142: 	pro	
143: 	.clause
8:	gsx1	2,2,$'$icn'/1
	cutx	4
	jtypx	0,3,&149
	pc	5,$'const'
	idtest	1,5
	jfail	&149
	pro	
149: 	jtypx	2,3,&150
	notid	1,2
	pro	
150: 	typx	2,4
	pro	
151: 	.clause
9:	gsx1	2,2,$'$ucn'/1
	cutx	4
	jtypx	0,3,&157
	pc	5,$'const'
	idtest	1,5
	jfail	&157
	pro	
157: 	jtypx	2,3,&158
	notid	1,2
	pro	
158: 	typx	2,8
	pro	
159: 	.clause
10:	gsx1	2,2,$'$smallInt'/1
	cutx	4
	jtypx	0,3,&166
	pc	5,$'const'
	idtest	1,5
	jfail	&166
	pro	
166: 	jtypx	2,3,&167
	notid	1,2
	pro	
167: 	gvara	0,2
	exec	1,&'$smallInt'/1
168: 	.clause
11:	gsx1	2,2,$'integer'/1
	cutx	4
	jtypx	0,3,&174
	pc	5,$'const'
	idtest	1,5
	jfail	&174
	pro	
174: 	jtypx	2,3,&175
	notid	1,2
	pro	
175: 	ctypx	2,17
	pro	
176: 	.clause
12:	gsx1	2,2,$'atom'/1
	cutx	4
	jtypx	0,3,&182
	pc	5,$'const'
	idtest	1,5
	jfail	&182
	pro	
182: 	jtypx	2,3,&183
	notid	1,2
	pro	
183: 	ctypx	2,2
	pro	
184: 	.clause
13:	gsx1	2,2,$'atomic'/1
	cutx	4
	jtypx	0,3,&190
	pc	5,$'const'
	idtest	1,5
	jfail	&190
	pro	
190: 	jtypx	2,3,&191
	notid	1,2
	pro	
191: 	ctypx	2,51
	pro	
192: 	.clause
14:	gsx1	2,0,$'const'/1
	cutx	4
	jtypx	0,3,&198
	notid	1,0
	pro	
198: 	typx	0,12
	pro	
199: 	.clause
15:	gsx1	2,2,$'$block'/1
	cutx	4
	jtypx	0,3,&205
	pc	5,$'const'
	idtest	1,5
	jfail	&205
	pro	
205: 	jtypx	2,3,&206
	notid	1,2
	pro	
206: 	ctypx	2,8
	pro	
207: 	.clause
16:	gsx1	2,2,$'float'/1
	cutx	4
	jtypx	0,3,&213
	pc	5,$'const'
	idtest	1,5
	jfail	&213
	pro	
213: 	jtypx	2,3,&214
	notid	1,2
	pro	
214: 	ctypx	2,32
	pro	
215: 	.clause
17:	gsx1	2,2,$'$i32'/1
	cutx	4
	jtypx	0,3,&221
	pc	5,$'const'
	idtest	1,5
	jfail	&221
	pro	
221: 	jtypx	2,3,&222
	notid	1,2
	pro	
222: 	ctypx	2,16
	pro	
223: 	.clause
18:	gsx1	2,2,$'number'/1
	cutx	4
	jtypx	0,3,&229
	pc	5,$'const'
	idtest	1,5
	jfail	&229
	pro	
229: 	jtypx	2,3,&230
	notid	1,2
	pro	
230: 	ctypx	2,49
	pro	
231: 	.clause
19:	gsx1	2,0,$'cons'/1
	cutx	4
	jtypx	0,3,&237
	notid	1,0
	pro	
237: 	typx	0,48
	pro	
238: 	.clause
20:	gsx1	2,0,$'$string'/1
	cutx	4
	jtypx	0,3,&244
	notid	1,0
	pro	
244: 	typx	0,48
	pro	
245: 	.clause
21:	gsx1	2,0,$'$list'/1
	cutx	4
	jtypx	0,3,&251
	notid	1,0
	pro	
251: 	typx	0,48
	pro	
252: 	.clause
22:	gsx1	2,0,$'compound'/1
	cutx	4
	jtypx	0,3,&258
	notid	1,0
	pro	
258: 	typx	0,112
	pro	
259: 	.clause
23:	gsx1	2,0,$'term'/1
	cutx	4
	jtypx	0,3,&265
	notid	1,0
	pro	
265: 	typx	0,112
	pro	
266: 	.clause
24:	gsx1	2,0,$'$struct'/1
	cutx	4
	jtypx	0,3,&272
	notid	1,0
	pro	
272: 	typx	0,64
	pro	
273: 	.clause
25:	gs	2,$'functor'/3
	uvara	1
	uvara	2
	uvarx	5
	cutx	4
	jtypx	0,252,&281
	jtypx	1,252,&279
	j	&280
279: 	jtypx	2,252,&281
	jtypx	5,252,&281
280: 	functor	1,2,5
	pro	
281: 	gc	3,$'short'
	pro	
282: 	.clause
26:	gsx2	2,2,5,$'=='/2
	cutx	4
	jtypx	0,252,&294
	jtypx	1,3,&292
	idtest	1,2
	jfail	&290
	jtypx	5,252,&290
	j	&291
290: 	idtest	1,5
	jfail	&292
	jtypx	2,252,&292
291: 	fail	
292: 	te	0,0,6,&293
	iseq	2,5,5
	gc	5,$'true'
	pro	
293: 	tre	0,0
	pro	
	j	&297
294: 	jtypx	2,3,&295
	pro	
295: 	jtypx	5,3,&296
	pro	
296: 	gvara	0,2
	gvara	1,5
	exec	2,&'sameType'/2
297: 	.clause
27:	gsx2	2,1,2,$'\\=='/2
	cutx	4
	jtypx	0,252,&305
303: 	te	0,0,3,&304
	iseq	1,2,5
	gc	5,$'fail'
	pro	
304: 	tre	0,0
	fail	
	j	&306
305: 	pro	
306: 	.clause
28:	gsx2	2,1,2,$'\\='/2
	cutx	4
	jtypx	0,252,&314
312: 	te	0,0,3,&313
	iseq	1,2,5
	gc	5,$'fail'
	pro	
313: 	tre	0,0
	fail	
	j	&315
314: 	pro	
315: 	.clause
29:	gsx2	2,2,5,$'='/2
	cutx	4
	jtypx	0,3,&326
	jtypx	2,3,&323
	j	&324
323: 	jtypx	5,3,&325
324: 	gvalx	5,2
	pro	
325: 	gvara	0,2
	gvara	1,5
	exec	2,&'sameType'/2
	j	&330
326: 	labelx	0
327: 	te	6,0,6,&329
	typx	1,3
	pl	6
	uvalx	2
	uvalx	5
	occurs	1,6
	cutx	0
	gvalx	5,2
	jtypx	1,3,&328
	gc	3,$'short'
	pro	
328: 	pro	
	j	&330
329: 	tre	6,0
	gvalx	5,2
	pro	
330: 	.clause
30:	gsx1	2,255,$'$label'/1
	cutx	4
	pro	
	.clause
31:	gc	2,$'true'
	cutx	4
	pro	
	.clause
32:	gc	2,$'fail'
	cutx	4
	fail	
	.clause
33:	gs	2,$'$arithPred'/1
	all	2
	uvary	0
	cutx	4
	labely	1
353: 	te	0,0,0,&354
	pvaly	0,5
	fvar	5,255
	typx	255,252
	pvaly	0,0
	call	2,1,&'isExpression'/1
	cuty	1
	pvaly	0,0
	dallexe	1,&'call'/1
354: 	tre	0,0
	dallpro	
355: 	.clause
34:	gsx2	2,2,5,$'$is'/2
	cutx	4
	jtypx	0,3,&361
	j	&363
361: 	fvar	2,255
	jtypx	255,252,&363
	j	&364
	j	&363
362: 	jtypx	5,252,&364
	jctypx	5,49,&363
	j	&364
363: 	gc	3,$'short'
	pro	
364: 	jtypx	1,3,&366
	idtest	1,5
	jfail	&366
	apushx	2
	popvx	5
	jtypx	1,3,&365
	gc	3,$'short'
	pro	
365: 	pro	
	j	&367
366: 	apushx	2
	popvx	5
	pro	
367: 	.clause
35:	gc	3,$'short'
	pro	
	last

	.pred	'sameType',2
4: 	sot	0,&0,&1,&2,&3
	.clause
0:	typx	0,3
	typx	1,3
	pro	
	.clause
1:	typx	0,12
	typx	1,12
	pro	
	.clause
2:	typx	0,48
	typx	1,48
	pro	
	.clause
3:	typx	0,64
	typx	1,64
	pro	
	last

	.pred	'differentType',2
4: 	sot	0,&0,&1,&2,&3
	.clause
0:	typx	0,3
	typx	1,252
	pro	
	.clause
1:	typx	0,12
	jtypx	1,12,&9
	fail	
9: 	pro	
10: 	.clause
2:	typx	0,48
	jtypx	1,48,&13
	fail	
13: 	pro	
14: 	.clause
3:	typx	0,64
	jtypx	1,64,&17
	fail	
17: 	pro	
18: 	last

	.pred	'splitHeadsOnN',3
	.clause
0:	all	10
	gvary	7,0
	gvary	3,1
	gvary	0,2
	pvaly	3,0
	pvary	6,1
	pvary	9,2
	call	10,3,&'splitHeads'/3
	puval	9,0
	pvary	5,1
	pvary	8,2
	call	9,3,&'termsToArgLists'/3
	pvaly	7,0
	puval	8,1
	pvary	4,2
	call	8,3,&'splitArgNList'/3
	pvaly	7,0
	puval	6,1
	pvary	2,2
	call	6,3,&'relabel'/3
	pvary	1,0
	puval	5,1
	puval	4,2
	call	4,3,&'termsToArgLists'/3
	pvaly	3,0
	puval	2,1
	puval	1,2
	pvaly	0,3
	dallexe	4,&'reassembleHeads'/4
	last

	.pred	'splitWhens',3
3: 	sot	0,&4,&0,&1,&2
4: 	sot	1,&5,&0,&1,&2
5: 	sot	2,&6,&0,&1,&2
6: 	mkdel	3,&3
	mark	2
	mark	1
	mark	0
	delay	
2: 	fail	
	.clause
0:	gnil	0
	gnil	1
	gnil	2
	pro	
	.clause
1:	glvx2	0,3,0
	gsx2	3,3,4,$'when'/2
	gl	1
	uvalx	3
	uvara	1
	gl	2
	uvalx	4
	uvara	2
	execsot	3,0,&4,&0,&1,&2
	last

	.pred	'splitHeads',3
3: 	sot	0,&4,&0,&1,&2
4: 	sot	1,&5,&0,&1,&2
5: 	sot	2,&6,&0,&1,&2
6: 	mkdel	3,&3
	mark	2
	mark	1
	mark	0
	delay	
2: 	fail	
	.clause
0:	gnil	0
	gnil	1
	gnil	2
	pro	
	.clause
1:	glvx2	0,3,0
	gs	3,$'clause'/5
	uvoid	1
	uvarx	3
	uvarx	4
	uvoid	2
	gl	1
	uvalx	3
	uvara	1
	gl	2
	uvalx	4
	uvara	2
	execsot	3,0,&4,&0,&1,&2
	last

	.pred	'reassembleHeads',4
3: 	sot	0,&4,&0,&1,&2
4: 	sot	1,&5,&0,&1,&2
5: 	sot	2,&6,&0,&1,&2
6: 	sot	3,&7,&0,&1,&2
7: 	mkdel	4,&3
	mark	3
	mark	2
	mark	1
	mark	0
	delay	
2: 	fail	
	.clause
0:	gnil	0
	gnil	1
	gnil	2
	gnil	3
	pro	
	.clause
1:	glvx2	0,4,0
	gs	4,$'clause'/5
	uvarx	4
	uvoid	2
	uvarx	5
	uvarx	6
	glvx2	1,7,1
	glvx2	2,8,2
	glvx2	3,9,3
	gs	9,$'clause'/5
	uvalx	4
	uvalx	7
	uvalx	8
	uvalx	5
	uvalx	6
	execsot	4,0,&4,&0,&1,&2
	last

	.pred	'termsToArgLists',3
3: 	sot	0,&4,&0,&1,&2
4: 	sot	2,&5,&0,&1,&2
5: 	mkdel	3,&3
	mark	2
	mark	0
	delay	
2: 	fail	
	.clause
0:	gnil	0
	gnil	2
	pro	
	.clause
1:	glvx2	0,3,0
	glvx2	2,4,2
	pl	5
	ulvx	1
	uvalx	4
	univ	3,5
	execsot	3,0,&4,&0,&1,&2
	last

	.pred	'relabel',3
3: 	sot	1,&4,&0,&1,&2
4: 	mkdel	3,&3
	mark	1
	delay	
2: 	fail	
	.clause
0:	gnil	1
	gnil	2
	pro	
	.clause
1:	glvx2	1,3,1
	jctypx	3,17,&14
	glvx2	2,4,2
	gl	4
	ulvx	0
	ul	255
	uvalx	3
	uc	$[]
	exec	3,&'relabel'/3
14: 	glvx2	2,4,2
	gl	4
	ulvx	0
	uvalx	3
	exec	3,&'relabel'/3
15: 	last

	.pred	'expandHead',3
	.clause
0:	all	3
	gvary	2,2
	pl	3
	uvary	1
	uvarx	4
	univ	1,3
	gvara	1,4
	pvary	0,2
	call	3,3,&'expandHead2'/3
	pvaly	2,3
	pl	4
	uvaly	1
	ulvy	0
	univ	3,4
	dallpro	
	last

	.pred	'expandHead2',3
10: 	sot	0,&11,&8,&12,&8
11: 	mkdel	3,&10
	mark	0
	delay	
8: 	fail	
12: 	glvx2	0,0,3
9: 	t	4,0,&4
	r	4,0,&5
	r	4,0,&6
	tr	4,0,&7
	.clause
4:	gvalx	1,2
	gnil	3
	pro	
	.clause
5:	all	3
	gvary	2,0
	gvary	0,2
	gvara	0,3
	ctypy	2,17
	pvary	1,2
	call	3,3,&'expandHead2'/3
	pvaly	2,0
	puval	1,1
	pvaly	0,2
	dallexe	3,&'splitArgN'/3
	.clause
6:	gs	0,$'fill'/1
	all	4
	uvary	3
	gvary	0,2
	gvara	0,3
	pvary	2,2
	call	4,3,&'expandHead2'/3
	pvary	1,0
	pvaly	3,1
	call	3,2,&'length'/2
	puval	2,0
	puval	1,1
	pvaly	0,2
	dallexe	3,&'append'/3
	.clause
7:	gs	0,$'residue'/1
	all	3
	uvary	2
	gvary	0,2
	gvara	0,3
	pvary	1,2
	call	3,3,&'expandHead2'/3
	pvaly	2,0
	puval	1,1
	pvaly	0,2
	dallexe	3,&'splitArgNWithResidue'/3
	last

	.pred	'choicesOfPrelude',3
11: 	labelx	3
	sot	0,&12,&10,&10,&13
12: 	mkdel	4,&11
	mark	0
	delay	
13: 	sose	0,&($'+'/2:&1,$'clauses'/2:&0,$'gl'/3:&8,$'gs'/4:&9,$'jv'/3:&2,$'soc'/3:&4,$'soce'/3:&5,$'sos'/3:&6,$'sose'/3:&7,$'sot'/5:&3),&10
	.clause
0:	gsx2	0,4,5,$'clauses'/2
	cutx	3
	gl	1
	uvarx	6
	ulvx	2
	gs	6,$'clauses'/2
	uvalx	4
	uvalx	5
	pro	
	.clause
1:	gs	0,$'+'/2
	uvara	0
	all	3
	uvary	2
	gvary	0,2
	cutx	3
	pvary	1,2
	call	3,3,&'choicesOfPrelude'/3
	pvaly	2,0
	puval	1,1
	pvaly	0,2
	dallexe	3,&'choicesOfPrelude'/3
	.clause
2:	gs	0,$'jv'/3
	uvoid	1
	uvara	0
	all	3
	uvary	2
	gvary	0,2
	cutx	3
	pvary	1,2
	call	3,3,&'choicesOfPrelude'/3
	pvaly	2,0
	puval	1,1
	pvaly	0,2
	dallexe	3,&'choicesOfPrelude'/3
	.clause
3:	gs	0,$'sot'/5
	uvoid	1
	uvara	0
	all	7
	uvary	6
	uvary	4
	uvary	2
	gvary	0,2
	cutx	3
	pvary	5,2
	call	7,3,&'choicesOfPrelude'/3
	pvaly	6,0
	puval	5,1
	pvary	3,2
	call	5,3,&'choicesOfPrelude'/3
	pvaly	4,0
	puval	3,1
	pvary	1,2
	call	3,3,&'choicesOfPrelude'/3
	pvaly	2,0
	puval	1,1
	pvaly	0,2
	dallexe	3,&'choicesOfPrelude'/3
	.clause
4:	gs	0,$'soc'/3
	uvoid	1
	uvara	0
	all	3
	uvary	2
	gvary	0,2
	cutx	3
	pvary	1,2
	call	3,3,&'choicesOfPrelude'/3
	pvaly	2,0
	puval	1,1
	pvaly	0,2
	dallexe	3,&'choicesOfTable'/3
	.clause
5:	gs	0,$'soce'/3
	uvoid	1
	uvara	0
	all	3
	uvary	2
	gvary	0,2
	cutx	3
	pvary	1,2
	call	3,3,&'choicesOfPrelude'/3
	pvaly	2,0
	puval	1,1
	pvaly	0,2
	dallexe	3,&'choicesOfTable'/3
	.clause
6:	gs	0,$'sos'/3
	uvoid	1
	uvara	0
	all	3
	uvary	2
	gvary	0,2
	cutx	3
	pvary	1,2
	call	3,3,&'choicesOfPrelude'/3
	pvaly	2,0
	puval	1,1
	pvaly	0,2
	dallexe	3,&'choicesOfTable'/3
	.clause
7:	gs	0,$'sose'/3
	uvoid	1
	uvara	0
	all	3
	uvary	2
	gvary	0,2
	cutx	3
	pvary	1,2
	call	3,3,&'choicesOfPrelude'/3
	pvaly	2,0
	puval	1,1
	pvaly	0,2
	dallexe	3,&'choicesOfTable'/3
	.clause
8:	gs	0,$'gl'/3
	uvoid	2
	uvara	0
	cutx	3
	exec	3,&'choicesOfPrelude'/3
	.clause
9:	gs	0,$'gs'/4
	uvoid	3
	uvara	0
	cutx	3
	exec	3,&'choicesOfPrelude'/3
	.clause
10:	gvalx	1,2
	pro	
	last

	.pred	'choicesOfTable',3
6: 	sot	0,&7,&0,&8,&12
7: 	mkdel	3,&6
	mark	0
	delay	
	j	&0
8: 	glvx2	0,0,3
9: 	sot	0,&10,&5,&5,&11
10: 	mkdel	4,&9
	mark	0
	delay	
5: 	fail	
11: 	sos	0,&($'entry'/2:&3,$'entry'/3:&4),&5
12: 	fail	
	.clause
0:	gnil	0
	gvalx	1,2
	pro	
	.clause
3:	gsx2	0,255,0,$'entry'/2
	all	3
	gvary	0,2
	gvary	2,3
	pvary	1,2
	call	3,3,&'choicesOfPrelude'/3
	pvaly	2,0
	puval	1,1
	pvaly	0,2
	dall	
	execsot	3,0,&7,&0,&8,&12
	.clause
4:	gs	0,$'entry'/3
	uvoid	2
	uvara	0
	all	3
	gvary	0,2
	gvary	2,3
	pvary	1,2
	call	3,3,&'choicesOfPrelude'/3
	pvaly	2,0
	puval	1,1
	pvaly	0,2
	dall	
	execsot	3,0,&7,&0,&8,&12
	last

	.pred	'uniqueChoices',2
	.clause
0:	all	2
	gvary	0,1
	pvary	1,1
	call	2,2,&'sort'/2
	puval	1,0
	pvaly	0,1
	dallexe	2,&'$bindDuplicateChoices'/2
	last

	.pred	'$bindDuplicateChoices',2
3: 	sot	0,&4,&0,&1,&2
4: 	mkdel	2,&3
	mark	0
	delay	
2: 	fail	
	.clause
0:	gnil	0
	gnil	1
	pro	
	.clause
1:	glvx2	0,4,2
	gl	1
	uvalx	4
	uvarx	3
	gsx2	4,0,1,$'clauses'/2
	exec	4,&'$bindDuplicateChoices'/4
	last

	.pred	'$bindDuplicateChoices',4
3: 	sot	2,&4,&0,&1,&2
4: 	mkdel	4,&3
	mark	2
	delay	
2: 	fail	
	.clause
0:	gnil	2
	gnil	3
	pro	
	.clause
1:	glvx2	2,6,2
	gsx2	6,4,5,$'clauses'/2
	idtest	0,4
	jfail	&17
	gvalx	5,1
	exec	4,&'$bindDuplicateChoices'/4
17: 	gl	3
	uvalx	6
	uvara	3
	gvara	0,4
	gvara	1,5
	exec	4,&'$bindDuplicateChoices'/4
18: 	last

	.pred	'clausesUsed',5
3: 	sot	0,&4,&0,&1,&2
4: 	mkdel	5,&3
	mark	0
	delay	
2: 	fail	
	.clause
0:	gnil	0
	gvalx	1,2
	gvalx	3,4
	pro	
	.clause
1:	gl	0
	uvarx	5
	all	5
	uvary	4
	gsx2	5,0,255,$'clauses'/2
	gvary	2,2
	gvary	0,4
	pvary	3,2
	pvary	1,4
	call	5,5,&'unfillHeads'/5
	pvaly	4,0
	puval	3,1
	pvaly	2,2
	puval	1,3
	pvaly	0,4
	dall	
	execsot	5,0,&4,&0,&1,&2
	last

	.pred	'labelsUsed',2
	.clause
0:	exec	2,&'uniqLabels'/2
	last

	.pred	'uniqLabels',2
	.clause
0:	exec	2,&'sort'/2
	last

	.pred	'makeMap',2
	.clause
0:	all	2
	gvary	0,1
	pvary	1,1
	call	2,2,&'makeMapKeys'/2
	puval	1,0
	pvaly	0,1
	dallexe	2,&'makeKeyedLookupTree'/2
	last

	.pred	'makeMapKeys',2
3: 	sot	0,&4,&0,&1,&2
4: 	mkdel	2,&3
	mark	0
	delay	
2: 	fail	
	.clause
0:	gnil	0
	gnil	1
	pro	
	.clause
1:	gl	0
	all	4
	uvary	2
	uvary	0
	gvary	3,1
	jctypy	2,17,&12
	pvaly	0,0
	pvaly	3,1
	dallexe	2,&'makeMapKeys'/2
12: 	pvary	1,0
	call	4,1,&'makeLabel'/1
	pvaly	3,255
	glvx2	255,2,1
	gs	2,$'-'/2
	uvaly	2
	ulvy	1
	pvaly	0,0
	dallexe	2,&'makeMapKeys'/2
13: 	last

	.pred	'mapLabel',3
	.clause
0:	all	3
	gvary	1,1
	gvary	0,2
	pvary	2,1
	call	3,2,&'unfill'/2
	jctypy	2,17,&9
	pvaly	0,255
	gvaly	2,255
	dallpro	
9: 	puval	2,0
	pvaly	1,1
	pvaly	0,2
	dallexe	3,&'lookupKeyedTree'/3
10: 	last

	.pred	'unfillHeads',5
3: 	sot	0,&4,&0,&1,&2
4: 	mkdel	5,&3
	mark	0
	delay	
2: 	fail	
	.clause
0:	gnil	0
	gvalx	1,2
	gvalx	3,4
	pro	
	.clause
1:	gl	0
	uvarx	5
	all	7
	uvary	4
	gs	5,$'clause'/5
	uvoid	1
	uvary	6
	uvarx	5
	uvoid	2
	gvary	2,2
	gl	3
	uvary	5
	uvary	1
	gvary	0,4
	pvarx	6,6
	pvarx	0,0
	functor	5,6,0
	pvary	3,2
	call	7,3,&'co$max'/3
	pvaly	6,0
	pvaly	5,1
	call	5,2,&'unfill'/2
	pvaly	4,0
	puval	3,1
	pvaly	2,2
	pvaly	1,3
	pvaly	0,4
	dall	
	execsot	5,0,&4,&0,&1,&2
	last

	.pred	'unfill',2
	labelx	2
4: 	sot	0,&3,&2,&3,&2
3: 	t	3,0,&0
	r	3,0,&1
	tr	3,0,&2
	.clause
0:	glvx2	0,3,0
	gsx1	3,255,$'fill'/1
	cutx	2
	exec	2,&'unfill'/2
	.clause
1:	gl	0
	uvarx	3
	uc	$[]
	gvalx	3,1
	cutx	2
	pro	
	.clause
2:	gvalx	0,1
	pro	
	last

	.pred	'compilePrelude',7
5: 	sot	4,&6,&7,&2,&8
6: 	mkdel	7,&5
	mark	4
	delay	
7: 	jc	4,$'no',&3
	j	&2
3: 	t	7,0,&0
	tr	7,0,&2
8: 	js	4,$'yes'/1,&4
	j	&2
4: 	t	7,0,&1
	tr	7,0,&2
	.clause
0:	gc	4,$'no'
	gvara	3,5
	gvara	4,6
	exec	5,&'compilePrelude2'/5
	.clause
1:	all	7
	gvary	3,0
	gvara	0,1
	gvary	1,2
	gvary	6,3
	gs	4,$'yes'/1
	uvary	4
	gvary	5,5
	gvary	0,6
	apushy	4
	afunc	46
	popx	1
	pvary	2,2
	call	7,3,&'co$max'/3
	jtypy	6,48,&41
	pvaly	3,0
	puval	2,1
	pvaly	1,2
	pvaly	5,3
	pvaly	0,4
	dallexe	5,&'compilePrelude2'/5
41: 	pvaly	5,255
	glvx2	255,7,3
	gs	7,$'label'/1
	us	255,$'temp'/1
	uvaly	4
	pvaly	3,0
	puval	2,1
	pvaly	1,2
	pvaly	0,4
	dallexe	5,&'compilePrelude2'/5
42: 	.clause
2:	gvarx	7,1
	gvarx	8,2
	pc	1,#(CHR,&53)
	pl	2
	ulvx	0
	ul	255
	ulvx	7
	ul	255
	ulvx	8
	ul	255
	ulvx	3
	ul	255
	ulvx	4
	uc	$[]
	pc	0,$'user_error'
	all	0
	call	0,3,&'$format'/3
	fail	
	last
53: 	.string	"~N%	Unable to compile prelude (~w) with ~w, ~w, ~w, ~w.~n"

	.pred	'compilePrelude2',5
36: 	sot	0,&37,&38,&31,&39
37: 	mkdel	5,&36
	mark	0
	delay	
38: 	soc	0,&($'fail':&9,$'nop':&3),&31
31: 	fail	
39: 	sos	0,&($'$'/1:&8,$'+'/2:&1,$'clauses'/2:&0,$'delay'/2:&5,$'fvar'/2:&4,$'gl'/3:&29,$'gs'/4:&30,$'j'/1:&7,$'jv'/3:&6,$'label'/1:&2,$'soc'/3:&32,$'soce'/3:&33,$'sos'/3:&34,$'sose'/3:&35,$'sot'/5:&10),&31
32: 	t	5,0,&11
	r	5,0,&12
	r	5,0,&13
	tr	5,0,&14
33: 	t	5,0,&15
	r	5,0,&16
	r	5,0,&17
	r	5,0,&18
	tr	5,0,&19
34: 	t	5,0,&20
	r	5,0,&21
	r	5,0,&22
	tr	5,0,&23
35: 	t	5,0,&24
	r	5,0,&25
	r	5,0,&26
	r	5,0,&27
	tr	5,0,&28
	.clause
0:	gs	0,$'clauses'/2
	uvara	0
	all	6
	uvary	0
	gvary	4,1
	gvary	3,2
	gvary	2,3
	gvary	1,4
	jtypy	0,3,&54
	pvary	5,1
	pvarx	2,2
	call	6,3,&'splitHeads'/3
	pvaly	2,255
	glvx2	255,5,4
	gs	5,$'$'/1
	uvaly	0
	puval	5,0
	pvaly	0,1
	pvaly	4,2
	pvaly	3,3
	pvaly	1,5
	dallexe	6,&'compileCP'/6
54: 	pvaly	2,255
	gl	255
	uvarx	5
	ulvy	1
	gs	5,$'j'/1
	uvaly	0
	dallpro	
55: 	.clause
1:	gs	0,$'+'/2
	uvara	0
	all	5
	uvary	4
	gvary	3,1
	gvary	2,2
	gvary	0,4
	pvaly	3,1
	pvaly	2,2
	pvary	1,4
	call	5,5,&'compilePrelude2'/5
	pvaly	4,0
	pvaly	3,1
	pvaly	2,2
	puval	1,3
	pvaly	0,4
	dall	
	execsot	5,0,&37,&38,&31,&39
	.clause
2:	gsx1	0,5,$'label'/1
	gl	3
	uvarx	6
	ulvx	4
	gs	6,$'label'/1
	uvalx	5
	pro	
	.clause
3:	gc	0,$'nop'
	gvalx	3,4
	pro	
	.clause
4:	gsx2	0,6,5,$'fvar'/2
	gl	3
	uvarx	7
	ulvx	4
	gs	7,$'fvar'/2
	uvarx	8
	us	255,$'temp'/1
	uvalx	5
	gs	8,$'temp'/1
	uvalx	6
	pro	
	.clause
5:	gsx2	0,0,5,$'delay'/2
	glvx2	3,6,7
	gs	6,$'mkdel'/2
	ulvx	1
	uvalx	5
	pl	2
	uc	$'delay'
	ulvx	4
	gvara	1,7
	exec	3,&'compileMarks'/3
	.clause
6:	gs	0,$'jv'/3
	uvarx	5
	all	8
	uvary	4
	uvary	6
	gvary	3,1
	gvary	2,2
	gl	3
	uvarx	6
	uvary	5
	gs	6,$'jv'/2
	uvarx	6
	uvary	7
	gs	6,$'temp'/1
	uvalx	5
	gvary	0,4
	pvaly	4,0
	pvaly	7,1
	pvaly	2,2
	call	8,3,&'labelOf'/3
	ps	5,$'$'/1
	uvaly	7
	pl	4
	uvalx	5
	uvary	1
	pvaly	6,0
	pvaly	3,1
	pvaly	2,2
	pvaly	5,3
	call	5,5,&'compilePrelude2'/5
	pvaly	4,0
	pvaly	3,1
	pvaly	2,2
	pvaly	1,3
	pvaly	0,4
	dall	
	execsot	5,0,&37,&38,&31,&39
	.clause
7:	gsx1	0,5,$'j'/1
	gl	3
	uvarx	6
	ulvx	4
	gs	6,$'j'/1
	uvalx	5
	pro	
	.clause
8:	gsx1	0,5,$'$'/1
	gl	3
	uvarx	6
	ulvx	4
	gs	6,$'$'/1
	uvalx	5
	pro	
	.clause
9:	gc	0,$'fail'
	gl	3
	uc	$'fail'
	ulvx	4
	pro	
	.clause
10:	gs	0,$'sot'/5
	uvarx	5
	uvara	0
	all	12
	uvary	11
	uvary	8
	uvary	5
	gvary	3,1
	gvary	2,2
	glvx2	3,6,7
	gs	6,$'sot'/5
	uvarx	6
	uvara	1
	uvary	10
	uvary	7
	uvary	4
	gs	6,$'temp'/1
	uvalx	5
	gvary	0,4
	pvaly	3,2
	pvaly	2,3
	gvara	4,7
	pvary	9,5
	call	12,6,&'compileSwitchBranch'/6
	pvaly	11,0
	pvaly	10,1
	pvaly	3,2
	pvaly	2,3
	puval	9,4
	pvary	6,5
	call	9,6,&'compileSwitchBranch'/6
	pvaly	8,0
	pvaly	7,1
	pvaly	3,2
	pvaly	2,3
	puval	6,4
	pvary	1,5
	call	6,6,&'compileSwitchBranch'/6
	pvaly	5,0
	pvaly	4,1
	pvaly	3,2
	pvaly	2,3
	puval	1,4
	pvaly	0,5
	dallexe	6,&'compileSwitchBranch'/6
	.clause
11:	gs	0,$'soc'/3
	uvoid	1
	uvarx	5
	uc	$[]
	gs	5,$'clauses'/2
	uc	$[]
	uvoid	1
	gl	3
	uc	$'fail'
	ulvx	4
	pro	
	.clause
12:	gs	0,$'soc'/3
	uvoid	1
	uvarx	5
	ul	255
	uvarx	6
	uc	$[]
	gs	5,$'clauses'/2
	uc	$[]
	uvoid	1
	gsx2	6,255,0,$'entry'/2
	execsot	5,0,&37,&38,&31,&39
	.clause
13:	gs	0,$'soc'/3
	uvoid	1
	uvara	0
	uc	$[]
	execsot	5,0,&37,&38,&31,&39
	.clause
14:	gs	0,$'soc'/3
	uvarx	5
	all	6
	uvary	5
	uvara	0
	gvary	3,1
	gvary	2,2
	glvx2	3,6,7
	gs	6,$'soc'/3
	uvarx	6
	uvary	4
	uvara	3
	gs	6,$'temp'/1
	uvalx	5
	gvary	0,4
	pvaly	3,1
	pvaly	2,2
	gvara	4,7
	pvary	1,5
	call	6,6,&'compileSOC'/6
	pvaly	5,0
	pvaly	4,1
	pvaly	3,2
	pvaly	2,3
	puval	1,4
	pvaly	0,5
	dallexe	6,&'compileSwitchBranch'/6
	.clause
15:	gs	0,$'soce'/3
	uvoid	1
	uvarx	5
	uc	$[]
	gs	5,$'clauses'/2
	uc	$[]
	uvoid	1
	gl	3
	uc	$'fail'
	ulvx	4
	pro	
	.clause
16:	gs	0,$'soce'/3
	uvoid	1
	uvarx	5
	ul	255
	uvarx	6
	uc	$[]
	gs	5,$'clauses'/2
	uc	$[]
	uvoid	1
	gsx2	6,255,0,$'entry'/2
	execsot	5,0,&37,&38,&31,&39
	.clause
17:	gs	0,$'soce'/3
	uvoid	1
	uvara	0
	uc	$[]
	execsot	5,0,&37,&38,&31,&39
	.clause
18:	gs	0,$'soce'/3
	uvarx	5
	uvara	0
	ul	255
	uvarx	6
	uc	$[]
	gs	6,$'entry'/2
	uvarx	6
	all	5
	uvary	4
	gvary	3,1
	gvary	2,2
	gl	3
	uvarx	7
	ul	255
	uvarx	8
	uvarx	9
	gs	7,$'jc'/3
	uvarx	7
	uvarx	10
	uvarx	11
	gs	7,$'temp'/1
	uvalx	5
	gs	10,$'const'/1
	uvalx	6
	gsx1	8,1,$'j'/1
	gvary	0,4
	ps	6,$'$'/1
	uvalx	11
	pl	5
	uvalx	6
	uvary	1
	pvaly	3,2
	pvaly	2,3
	gvara	4,9
	call	5,6,&'compileSwitchBranch'/6
	pvaly	4,0
	pvaly	3,1
	pvaly	2,2
	pvaly	1,3
	pvaly	0,4
	dall	
	execsot	5,0,&37,&38,&31,&39
	.clause
19:	gs	0,$'soce'/3
	uvarx	5
	all	6
	uvary	5
	uvara	0
	gvary	3,1
	gvary	2,2
	glvx2	3,6,7
	gs	6,$'soce'/3
	uvarx	6
	uvary	4
	uvara	3
	gs	6,$'temp'/1
	uvalx	5
	gvary	0,4
	pvaly	3,1
	pvaly	2,2
	gvara	4,7
	pvary	1,5
	call	6,6,&'compileSOC'/6
	pvaly	5,0
	pvaly	4,1
	pvaly	3,2
	pvaly	2,3
	puval	1,4
	pvaly	0,5
	dallexe	6,&'compileSwitchBranch'/6
	.clause
20:	gs	0,$'sos'/3
	uvoid	1
	uvarx	5
	uc	$[]
	gs	5,$'clauses'/2
	uc	$[]
	uvoid	1
	gl	3
	uc	$'fail'
	ulvx	4
	pro	
	.clause
21:	gs	0,$'sos'/3
	uvoid	1
	uvarx	5
	ul	255
	uvarx	6
	uc	$[]
	gs	5,$'clauses'/2
	uc	$[]
	uvoid	1
	gs	6,$'entry'/3
	uvoid	2
	uvara	0
	execsot	5,0,&37,&38,&31,&39
	.clause
22:	gs	0,$'sos'/3
	uvoid	1
	uvara	0
	uc	$[]
	execsot	5,0,&37,&38,&31,&39
	.clause
23:	gs	0,$'sos'/3
	uvarx	5
	all	6
	uvary	5
	uvara	0
	gvary	3,1
	gvary	2,2
	glvx2	3,6,7
	gs	6,$'sos'/3
	uvarx	6
	uvary	4
	uvara	3
	gs	6,$'temp'/1
	uvalx	5
	gvary	0,4
	pvaly	3,1
	pvaly	2,2
	gvara	4,7
	pvary	1,5
	call	6,6,&'compileSOS'/6
	pvaly	5,0
	pvaly	4,1
	pvaly	3,2
	pvaly	2,3
	puval	1,4
	pvaly	0,5
	dallexe	6,&'compileSwitchBranch'/6
	.clause
24:	gs	0,$'sose'/3
	uvoid	1
	uvarx	5
	uc	$[]
	gs	5,$'clauses'/2
	uc	$[]
	uvoid	1
	gl	3
	uc	$'fail'
	ulvx	4
	pro	
	.clause
25:	gs	0,$'sose'/3
	uvoid	1
	uvarx	5
	ul	255
	uvarx	6
	uc	$[]
	gs	5,$'clauses'/2
	uc	$[]
	uvoid	1
	gs	6,$'entry'/3
	uvoid	2
	uvara	0
	execsot	5,0,&37,&38,&31,&39
	.clause
26:	gs	0,$'sose'/3
	uvoid	1
	uvara	0
	uc	$[]
	execsot	5,0,&37,&38,&31,&39
	.clause
27:	gs	0,$'sose'/3
	uvarx	5
	uvara	0
	ul	255
	uvarx	6
	uc	$[]
	gs	6,$'entry'/3
	uvarx	6
	uvarx	7
	all	5
	uvary	4
	gvary	3,1
	gvary	2,2
	gl	3
	uvarx	8
	ul	255
	uvarx	9
	uvarx	10
	gs	8,$'js'/3
	uvarx	8
	uvarx	11
	uvarx	12
	gs	8,$'temp'/1
	uvalx	5
	gs	11,$'/'/2
	uvalx	6
	uvalx	7
	gsx1	9,1,$'j'/1
	gvary	0,4
	ps	6,$'$'/1
	uvalx	12
	pl	5
	uvalx	6
	uvary	1
	pvaly	3,2
	pvaly	2,3
	gvara	4,10
	call	5,6,&'compileSwitchBranch'/6
	pvaly	4,0
	pvaly	3,1
	pvaly	2,2
	pvaly	1,3
	pvaly	0,4
	dall	
	execsot	5,0,&37,&38,&31,&39
	.clause
28:	gs	0,$'sose'/3
	uvarx	5
	all	6
	uvary	5
	uvara	0
	gvary	3,1
	gvary	2,2
	glvx2	3,6,7
	gs	6,$'sose'/3
	uvarx	6
	uvary	4
	uvara	3
	gs	6,$'temp'/1
	uvalx	5
	gvary	0,4
	pvaly	3,1
	pvaly	2,2
	gvara	4,7
	pvary	1,5
	call	6,6,&'compileSOS'/6
	pvaly	5,0
	pvaly	4,1
	pvaly	3,2
	pvaly	2,3
	puval	1,4
	pvaly	0,5
	dallexe	6,&'compileSwitchBranch'/6
	.clause
29:	gs	0,$'gl'/3
	uvarx	5
	uvarx	6
	all	7
	uvary	4
	gl	6
	uvara	0
	ul	255
	uvarx	6
	uc	$[]
	gvary	5,1
	gvary	2,2
	gl	3
	uvarx	7
	uvary	1
	gs	7,$'glv2'/3
	uvarx	7
	uvarx	8
	us	255,$'temp'/1
	uvalx	6
	gs	7,$'temp'/1
	uvalx	5
	gs	8,$'temp'/1
	uvalx	0
	gvary	0,4
	gvara	1,6
	pvary	6,2
	call	7,3,&'co$max'/3
	apushy	6
	afunc	46
	popx	0
	pvaly	5,1
	pvary	3,2
	call	5,3,&'co$max'/3
	pvaly	4,0
	puval	3,1
	pvaly	2,2
	pvaly	1,3
	pvaly	0,4
	dall	
	execsot	5,0,&37,&38,&31,&39
	.clause
30:	gs	0,$'gs'/4
	all	12
	uvary	9
	uvarx	5
	uvary	8
	uvary	4
	gs	5,$'/'/2
	uvary	7
	uvary	6
	gvary	10,1
	gvary	2,2
	gvary	5,3
	gvary	0,4
	pvary	11,0
	pvaly	8,1
	call	12,2,&'co$max'/2
	apushy	11
	afunc	46
	popx	0
	pvaly	10,1
	pvary	3,2
	call	10,3,&'co$max'/3
	pvaly	9,0
	pvaly	8,1
	pvaly	7,2
	pvaly	6,3
	pvaly	5,4
	pvary	1,5
	call	5,6,&'compilePreludeGS'/6
	pvaly	4,0
	puval	3,1
	pvaly	2,2
	puval	1,3
	pvaly	0,4
	dall	
	execsot	5,0,&37,&38,&31,&39
	last

	.pred	'compilePreludeGS',6
3: 	sot	3,&4,&5,&2,&2
4: 	mkdel	6,&3
	mark	3
	delay	
5: 	soce	3,&($1:&1,$2:&0),&2
	.clause
0:	gl	1
	uvarx	7
	ul	255
	uvarx	6
	uc	$[]
	gc	3,$2
	gl	4
	uvarx	8
	ulvx	5
	gs	8,$'gs2'/4
	uvarx	9
	uvarx	10
	uvarx	11
	us	255,$'/'/2
	ulvx	2
	uc	$2
	gs	9,$'temp'/1
	ulvx	0
	gs	10,$'temp'/1
	uvalx	7
	gs	11,$'temp'/1
	uvalx	6
	pro	
	.clause
1:	gl	1
	uvarx	6
	uc	$[]
	gc	3,$1
	gl	4
	uvarx	7
	ulvx	5
	gs	7,$'gs1'/3
	uvarx	8
	uvarx	9
	us	255,$'/'/2
	ulvx	2
	uc	$1
	gs	8,$'temp'/1
	ulvx	0
	gs	9,$'temp'/1
	uvalx	6
	pro	
	.clause
2:	apushx	3
	pushi	$$2
	apred	4
	glvx2	4,6,7
	gs	6,$'gs'/2
	uvarx	6
	us	255,$'/'/2
	ulvx	2
	ulvx	3
	gs	6,$'temp'/1
	ulvx	0
	gvara	0,1
	gvara	1,7
	gvara	2,5
	exec	3,&'compilePreludeArgs'/3
	last

	.pred	'compilePreludeArgs',3
3: 	sot	0,&4,&0,&1,&2
4: 	mkdel	3,&3
	mark	0
	delay	
2: 	fail	
	.clause
0:	gnil	0
	gvalx	1,2
	pro	
	.clause
1:	glvx2	0,3,0
	glvx2	1,4,1
	gs	4,$'uvar'/1
	us	255,$'temp'/1
	uvalx	3
	execsot	3,0,&4,&0,&1,&2
	last

	.pred	'compileSwitchBranch',6
	labelx	6
4: 	sot	0,&3,&2,&2,&5
3: 	t	7,0,&0
	r	7,0,&1
	tr	7,0,&2
5: 	js	0,$'clauses'/2,&3
	j	&2
	j	&3
	.clause
0:	gsx2	0,255,7,$'clauses'/2
	gvalx	7,1
	gvalx	4,5
	typx	7,252
	cutx	6
	pro	
	.clause
1:	gsx2	0,7,255,$'clauses'/2
	gl	7
	uvarx	7
	uc	$[]
	gs	7,$'clause'/5
	uvoid	1
	uvara	0
	uvoid	3
	gvarx	7,1
	gvara	1,3
	gvalx	4,5
	all	1
	gvary	0,6
	gvara	2,7
	call	1,3,&'mapLabel'/3
	cuty	0
	dallpro	
	.clause
2:	glvx2	4,7,8
	gs	7,$'$'/1
	ulvx	1
	gvara	4,5
	gvara	1,2
	gvara	2,3
	gvara	3,8
	exec	5,&'compilePrelude2'/5
	last

	.pred	'compileSOC',6
3: 	sot	0,&4,&0,&1,&2
4: 	sot	3,&5,&0,&1,&2
5: 	mkdel	6,&3
	mark	3
	mark	0
	delay	
2: 	fail	
	.clause
0:	gnil	0
	gnil	3
	gvalx	4,5
	pro	
	.clause
1:	gl	0
	uvarx	6
	all	6
	uvary	5
	gsx2	6,6,0,$'entry'/2
	gvary	4,1
	gvary	3,2
	gl	3
	uvarx	7
	uvary	2
	gs	7,$'entry'/2
	uvalx	6
	uvara	1
	gvary	0,5
	pvaly	4,2
	pvaly	3,3
	pvary	1,5
	call	6,6,&'compileSwitchBranch'/6
	pvaly	5,0
	pvaly	4,1
	pvaly	3,2
	pvaly	2,3
	puval	1,4
	pvaly	0,5
	dall	
	execsot	6,0,&4,&0,&1,&2
	last

	.pred	'compileSOS',6
3: 	sot	0,&4,&0,&1,&2
4: 	sot	3,&5,&0,&1,&2
5: 	mkdel	6,&3
	mark	3
	mark	0
	delay	
2: 	fail	
	.clause
0:	gnil	0
	gnil	3
	gvalx	4,5
	pro	
	.clause
1:	gl	0
	uvarx	6
	all	6
	uvary	5
	gs	6,$'entry'/3
	uvarx	6
	uvarx	7
	uvara	0
	gvary	4,1
	gvary	3,2
	gl	3
	uvarx	8
	uvary	2
	gs	8,$'entry'/3
	uvalx	6
	uvalx	7
	uvara	1
	gvary	0,5
	pvaly	4,2
	pvaly	3,3
	pvary	1,5
	call	6,6,&'compileSwitchBranch'/6
	pvaly	5,0
	pvaly	4,1
	pvaly	3,2
	pvaly	2,3
	puval	1,4
	pvaly	0,5
	dall	
	execsot	6,0,&4,&0,&1,&2
	last

	.pred	'compileCP',6
3: 	sot	0,&4,&0,&1,&2
4: 	mkdel	6,&3
	mark	0
	delay	
2: 	fail	
	.clause
0:	gnil	0
	gvara	0,1
	gl	4
	uc	$'fail'
	uvarx	6
	gvalx	6,5
	exec	1,&'makeLabel'/1
	.clause
1:	gl	0
	uvara	0
	all	7
	uvary	5
	gvary	6,1
	gvary	4,2
	gvary	3,3
	gvary	2,4
	gvary	1,5
	pvaly	3,1
	pvary	0,2
	call	7,3,&'mapLabel'/3
	jtypy	5,48,&27
	pvaly	6,0
	call	6,1,&'makeLabel'/1
	pvaly	2,255
	glvx2	255,6,3
	gs	6,$'t'/2
	ulvy	4
	ulvy	0
	pvaly	5,0
	pvaly	4,1
	pvaly	3,2
	pvaly	1,4
	dallexe	5,&'compileCP1'/5
27: 	pvaly	2,255
	gl	255
	uvarx	6
	ulvy	1
	gs	6,$'j'/1
	ulvy	0
	dallpro	
28: 	last

	.pred	'compileCP1',5
3: 	sot	0,&4,&5,&6,&8
4: 	mkdel	5,&3
	mark	0
	delay	
5: 	fail	
6: 	glvx2	0,0,5
7: 	jnvx	5,&1
2: 	mkdel	6,&7
	mark	5
	delay	
8: 	fail	
	.clause
1:	all	6
	gvary	1,1
	gvary	5,2
	gvary	3,3
	gvary	2,4
	gvary	4,5
	pvaly	5,1
	pvary	0,2
	call	6,3,&'mapLabel'/3
	jtypy	4,48,&23
	pvaly	3,255
	glvx2	255,6,3
	gs	6,$'r'/2
	ulvy	1
	ulvy	0
	pvaly	4,0
	pvaly	1,1
	pvaly	5,2
	pvaly	2,4
	dallexe	5,&'compileCP1'/5
23: 	pvaly	4,255
	gnil	255
	pvaly	3,255
	gl	255
	uvarx	6
	ulvy	2
	gs	6,$'tr'/2
	ulvy	1
	ulvy	0
	dallpro	
24: 	last

	.pred	'mergeHeads',3
6: 	jnvx	0,&7
3: 	mkdel	4,&6
	mark	0
	delay	
7: 	labelx	3
	sot	1,&8,&9,&5,&0
8: 	mkdel	4,&7
	mark	1
	delay	
9: 	jc	1,$[],&4
	j	&0
4: 	t	4,0,&0
	tr	4,0,&1
5: 	t	4,0,&0
	tr	4,0,&2
	.clause
0:	gnil	0
	cutx	3
	gvalx	2,1
	pro	
	.clause
1:	gnil	1
	cutx	3
	gvalx	2,0
	pro	
	.clause
2:	gl	0
	all	7
	uvary	2
	uvary	1
	gl	1
	uvary	3
	uvary	0
	gvary	4,2
	pvaly	2,255
	gs	255,$'clause'/5
	uvoid	1
	uvara	0
	uvoid	3
	pvary	6,1
	call	7,2,&'baseLabel'/2
	pvaly	3,255
	gs	255,$'clause'/5
	uvoid	1
	uvara	0
	uvoid	3
	pvary	5,1
	call	7,2,&'baseLabel'/2
	apushy	6
	pushy	5
	jpred	2,&32
	pvaly	4,255
	gl	255
	uvaly	2
	uvara	2
	pl	1
	uvaly	3
	uvaly	0
	pvaly	1,0
	dallexe	3,&'mergeHeads'/3
32: 	pvaly	4,255
	gl	255
	uvaly	3
	uvara	2
	pl	0
	uvaly	2
	uvaly	1
	pvaly	0,1
	dallexe	3,&'mergeHeads'/3
33: 	last

	.pred	'compileMarks',3
3: 	sot	0,&4,&0,&1,&2
4: 	mkdel	3,&3
	mark	0
	delay	
2: 	fail	
	.clause
0:	gnil	0
	gvalx	1,2
	pro	
	.clause
1:	glvx2	0,3,0
	glvx2	1,4,1
	gs	4,$'mark'/1
	us	255,$'temp'/1
	uvalx	3
	execsot	3,0,&4,&0,&1,&2
	last

	.pred	'labelOf',3
	labelx	3
5: 	sot	0,&3,&2,&4,&6
3: 	t	4,0,&0
	r	4,0,&1
	tr	4,0,&2
4: 	t	4,0,&1
	tr	4,0,&2
6: 	js	0,$'j'/1,&0
	j	&2
	j	&0
	.clause
0:	gsx1	0,4,$'j'/1
	cutx	3
	gvalx	1,4
	pro	
	.clause
1:	gl	0
	uvarx	4
	uc	$[]
	gs	4,$'clause'/5
	uvoid	1
	uvara	0
	uvoid	3
	gvarx	4,1
	gvara	1,2
	cutx	3
	gvara	2,4
	exec	3,&'mapLabel'/3
	.clause
2:	gvara	0,1
	exec	1,&'makeLabel'/1
	last

	.pred	'baseLabel',2
	.clause
0:	jctypx	0,17,&5
	gvalx	1,0
	pro	
5: 	exec	2,&'co$lastElement'/2
6: 	last

	.pred	'co$lastElement',2
5: 	sot	0,&6,&7,&8,&12
6: 	mkdel	2,&5
	mark	0
	delay	
7: 	fail	
8: 	glvx2	0,0,2
9: 	sot	2,&10,&11,&3,&3
10: 	mkdel	3,&9
	mark	2
	delay	
11: 	jc	2,$[],&4
	j	&3
4: 	t	3,0,&2
	tr	3,0,&3
12: 	fail	
	.clause
2:	gvalx	0,1
	gnil	2
	pro	
	.clause
3:	gvara	0,2
	execsot	2,0,&6,&7,&8,&12
	last

	.pred	'optimizePrelude',2
	.clause
0:	all	3
	gvary	2,1
	pvary	1,1
	call	3,2,&'optimizePrelude2'/2
	labely	0
7: 	te	0,0,0,&8
	puval	1,0
	pvaly	2,1
	call	1,2,&'redundantPrelude'/2
	j	&9
8: 	tre	0,0
	puval	1,255
	gvaly	2,255
9: 	cuty	0
	dallpro	
	last

	.pred	'optimizePrelude2',2
12: 	labelx	2
	sot	0,&13,&14,&15,&19
13: 	mkdel	3,&12
	mark	0
	delay	
14: 	labelx	2
	j	&0
15: 	glvx2	0,0,3
16: 	labelx	2
	sot	0,&17,&8,&8,&18
17: 	mkdel	4,&16
	mark	0
	delay	
18: 	sose	0,&($'j'/1:&9,$'jnv'/2:&10,$'jv'/2:&11),&8
9: 	t	4,0,&7
	tr	4,0,&8
10: 	t	4,0,&6
	tr	4,0,&8
11: 	t	4,0,&5
	tr	4,0,&8
19: 	fail	
	.clause
0:	gnil	0
	gnil	1
	pro	
	.clause
5:	gsx2	0,4,5,$'jv'/2
	gl	1
	uvarx	6
	ul	255
	uvarx	7
	uvara	1
	gs	6,$'jnv'/2
	uvalx	4
	uvarx	4
	gs	7,$'$'/1
	uvalx	5
	gl	3
	uvarx	6
	ul	255
	uvarx	7
	uvara	0
	gs	6,$'j'/1
	uvalx	4
	gs	7,$'$'/1
	uvalx	5
	cutx	2
	exec	2,&'optimizePrelude2'/2
	.clause
6:	gsx2	0,4,5,$'jnv'/2
	gl	1
	uvarx	6
	ul	255
	uvarx	7
	uvara	1
	gs	6,$'jv'/2
	uvalx	4
	uvarx	4
	gs	7,$'$'/1
	uvalx	5
	gl	3
	uvarx	6
	ul	255
	uvarx	7
	uvara	0
	gs	6,$'j'/1
	uvalx	4
	gs	7,$'$'/1
	uvalx	5
	cutx	2
	exec	2,&'optimizePrelude2'/2
	.clause
7:	gsx1	0,4,$'j'/1
	glvx2	1,5,1
	gs	5,$'$'/1
	uvalx	4
	glvx2	3,5,0
	gs	5,$'$'/1
	uvalx	4
	cutx	2
	exec	2,&'optimizePrelude2'/2
	.clause
8:	gl	1
	ulvx	0
	uvara	1
	gvara	0,3
	exec	2,&'optimizePrelude2'/2
	last

	.pred	'redundantPrelude',2
7: 	sot	0,&8,&9,&10,&14
8: 	mkdel	2,&7
	mark	0
	delay	
9: 	fail	
10: 	glvx2	0,0,2
11: 	sot	0,&12,&6,&6,&13
12: 	mkdel	3,&11
	mark	0
	delay	
6: 	fail	
13: 	sos	0,&($'$'/1:&5,$'j'/1:&3,$'label'/1:&4),&6
14: 	fail	
	.clause
3:	gsx1	0,255,$'j'/1
	gnil	1
	gnil	2
	pro	
	.clause
4:	gsx1	0,3,$'label'/1
	glvx2	1,4,1
	gs	4,$'label'/1
	uvalx	3
	gvara	0,2
	execsot	2,0,&8,&9,&10,&14
	.clause
5:	gsx1	0,3,$'$'/1
	glvx2	1,4,1
	gs	4,$'$'/1
	uvalx	3
	gvara	0,2
	execsot	2,0,&8,&9,&10,&14
	last

