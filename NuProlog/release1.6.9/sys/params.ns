
	.pred	'maxint',1
	.clause
0:	apushi	$$2147483647
	popvx	0
	pro	
	last

	.pred	'nuprolog',0
	.clause
0:	pro	
	last

	.pred	'muprolog',0
	.clause
0:	fail	
	last

	.pred	'$tag',2
16: 	sot	0,&14,&17,&15,&15
14: 	t	2,0,&0
	r	2,0,&1
	r	2,0,&2
	r	2,0,&3
	r	2,0,&4
	r	2,0,&5
	r	2,0,&6
	r	2,0,&7
	r	2,0,&8
	r	2,0,&9
	r	2,0,&10
	r	2,0,&11
	r	2,0,&12
	tr	2,0,&13
17: 	soc	0,&($'$bmv':&13,$'$del':&3,$'$list':&7,$'$ref':&1,$'$string':&9,$'$struct':&11,$'bmv':&12,$'del':&2,$'icn':&4,$'list':&6,$'ref':&0,$'string':&8,$'struct':&10,$'ucn':&5),&15
15: 	fail	
	.clause
0:	gc	0,$'ref'
	gc	1,$0
	pro	
	.clause
1:	gc	0,$'$ref'
	gc	1,$0
	pro	
	.clause
2:	gc	0,$'del'
	gc	1,$1
	pro	
	.clause
3:	gc	0,$'$del'
	gc	1,$1
	pro	
	.clause
4:	gc	0,$'icn'
	gc	1,$2
	pro	
	.clause
5:	gc	0,$'ucn'
	gc	1,$3
	pro	
	.clause
6:	gc	0,$'list'
	gc	1,$4
	pro	
	.clause
7:	gc	0,$'$list'
	gc	1,$4
	pro	
	.clause
8:	gc	0,$'string'
	gc	1,$5
	pro	
	.clause
9:	gc	0,$'$string'
	gc	1,$5
	pro	
	.clause
10:	gc	0,$'struct'
	gc	1,$6
	pro	
	.clause
11:	gc	0,$'$struct'
	gc	1,$6
	pro	
	.clause
12:	gc	0,$'bmv'
	gc	1,$7
	pro	
	.clause
13:	gc	0,$'$bmv'
	gc	1,$7
	pro	
	last

	.pred	'$ctag',3
8: 	sot	0,&6,&9,&7,&7
6: 	t	3,0,&0
	r	3,0,&1
	r	3,0,&2
	r	3,0,&3
	r	3,0,&4
	tr	3,0,&5
9: 	soc	0,&($'$block':&3,$'$i32':&4,$'atom':&1,$'block':&2,$'float':&5,$'integer':&0),&7
7: 	fail	
	.clause
0:	gc	0,$'integer'
	gc	1,$'icn'
	gc	2,$0
	pro	
	.clause
1:	gc	0,$'atom'
	gc	1,$'icn'
	gc	2,$1
	pro	
	.clause
2:	gc	0,$'block'
	gc	1,$'icn'
	gc	2,$3
	pro	
	.clause
3:	gc	0,$'$block'
	gc	1,$'icn'
	gc	2,$3
	pro	
	.clause
4:	gc	0,$'$i32'
	gc	1,$'ucn'
	gc	2,$0
	pro	
	.clause
5:	gc	0,$'float'
	gc	1,$'ucn'
	gc	2,$1
	pro	
	last

	.pred	'$type',2
15: 	sot	0,&13,&16,&14,&14
13: 	t	2,0,&0
	r	2,0,&1
	r	2,0,&2
	r	2,0,&3
	r	2,0,&4
	r	2,0,&5
	r	2,0,&6
	r	2,0,&7
	r	2,0,&8
	r	2,0,&9
	r	2,0,&10
	r	2,0,&11
	tr	2,0,&12
16: 	soc	0,&($'$bmv':&12,$'$del':&2,$'$icn':&4,$'$ref':&1,$'$string':&9,$'$struct':&11,$'$ucn':&5,$'compound':&6,$'cons':&8,$'const':&7,$'nonvar':&3,$'term':&10,$'var':&0),&14
14: 	fail	
	.clause
0:	gc	0,$'var'
	gc	1,$3
	pro	
	.clause
1:	gc	0,$'$ref'
	gc	1,$1
	pro	
	.clause
2:	gc	0,$'$del'
	gc	1,$2
	pro	
	.clause
3:	gc	0,$'nonvar'
	gc	1,$252
	pro	
	.clause
4:	gc	0,$'$icn'
	gc	1,$4
	pro	
	.clause
5:	gc	0,$'$ucn'
	gc	1,$8
	pro	
	.clause
6:	gc	0,$'compound'
	gc	1,$112
	pro	
	.clause
7:	gc	0,$'const'
	gc	1,$12
	pro	
	.clause
8:	gc	0,$'cons'
	gc	1,$48
	pro	
	.clause
9:	gc	0,$'$string'
	gc	1,$32
	pro	
	.clause
10:	gc	0,$'term'
	gc	1,$112
	pro	
	.clause
11:	gc	0,$'$struct'
	gc	1,$64
	pro	
	.clause
12:	gc	0,$'$bmv'
	gc	1,$128
	pro	
	last

	.pred	'$ctype',2
10: 	sot	0,&8,&11,&9,&9
8: 	t	2,0,&0
	r	2,0,&1
	r	2,0,&2
	r	2,0,&3
	r	2,0,&4
	r	2,0,&5
	r	2,0,&6
	tr	2,0,&7
11: 	soc	0,&($'$block':&4,$'$i32':&6,$'$smallInt':&0,$'atom':&2,$'atomic':&3,$'float':&5,$'integer':&1,$'number':&7),&9
9: 	fail	
	.clause
0:	gc	0,$'$smallInt'
	gc	1,$1
	pro	
	.clause
1:	gc	0,$'integer'
	gc	1,$17
	pro	
	.clause
2:	gc	0,$'atom'
	gc	1,$2
	pro	
	.clause
3:	gc	0,$'atomic'
	gc	1,$51
	pro	
	.clause
4:	gc	0,$'$block'
	gc	1,$8
	pro	
	.clause
5:	gc	0,$'float'
	gc	1,$32
	pro	
	.clause
6:	gc	0,$'$i32'
	gc	1,$16
	pro	
	.clause
7:	gc	0,$'number'
	gc	1,$49
	pro	
	last

	.pred	'$codeType',2
6: 	sot	0,&4,&7,&5,&5
4: 	t	2,0,&0
	r	2,0,&1
	r	2,0,&2
	tr	2,0,&3
7: 	soc	0,&($'compiled':&1,$'interpreted':&0,$'native':&2,$'spypoint':&3),&5
5: 	fail	
	.clause
0:	gc	0,$'interpreted'
	gc	1,$1
	pro	
	.clause
1:	gc	0,$'compiled'
	gc	1,$2
	pro	
	.clause
2:	gc	0,$'native'
	gc	1,$3
	pro	
	.clause
3:	gc	0,$'spypoint'
	gc	1,$4
	pro	
	last

