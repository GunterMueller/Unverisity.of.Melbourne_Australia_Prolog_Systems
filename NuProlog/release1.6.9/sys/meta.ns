
	.pred	'call',1
2: 	jnvx	0,&0
1: 	mkdel	1,&2
	mark	0
	delay	
	.clause
0:	labelx	1
	exec	2,&'$call'/2
	last

	.pred	'$call',2
11: 	labelx	2
	sot	0,&12,&13,&8,&14
12: 	mkdel	3,&11
	mark	0
	delay	
13: 	soce	0,&($'!':&9,$'$softCut':&5,$'fail':&7,$'true':&6),&8
9: 	t	3,0,&4
	tr	3,0,&8
14: 	sose	0,&($','/2:&0,$'->'/2:&2,$';'/2:&10),&8
10: 	t	3,0,&1
	tr	3,0,&3
	.clause
0:	gs	0,$','/2
	uvara	0
	all	2
	uvary	1
	gvary	0,1
	cutx	2
	pvaly	0,1
	call	2,2,&'$call'/2
	pvaly	1,0
	pvaly	0,1
	dallexe	2,&'$call'/2
	.clause
1:	gsx2	0,4,3,$';'/2
	gs	4,$'->'/2
	uvara	0
	all	3
	uvary	1
	gvary	0,1
	cutx	2
	labely	2
30: 	te	4,0,4,&31
	call	3,1,&'call'/1
	cuty	2
	pvaly	1,0
	pvaly	0,1
	dallexe	2,&'$call'/2
31: 	tre	4,0
	gvara	0,3
	pvaly	0,1
	dallexe	2,&'$call'/2
32: 	.clause
2:	gs	0,$'->'/2
	uvara	0
	all	3
	uvary	1
	gvary	0,1
	cutx	2
	labely	2
39: 	te	0,0,1,&40
	call	3,1,&'call'/1
	cuty	2
	pvaly	1,0
	pvaly	0,1
	dallexe	2,&'$call'/2
40: 	tre	0,0
	dallpro	
41: 	.clause
3:	gsx2	0,0,3,$';'/2
	cutx	2
49: 	te	4,0,4,&50
	exec	2,&'$call'/2
50: 	tre	4,0
	gvara	0,3
	exec	2,&'$call'/2
51: 	.clause
4:	gc	0,$'!'
	cutx	1
	pro	
	.clause
5:	gc	0,$'$softCut'
	cutx	2
	softcut	1
	pro	
	.clause
6:	gc	0,$'true'
	cutx	2
	pro	
	.clause
7:	gc	0,$'fail'
	cutx	2
	fail	
	.clause
8:	flags	3
	pc	4,$8
	arg	4,3,1
	pc	3,$'trace'
	idtest	1,3
	jfail	&69
	exec	1,&'spy$watch'/1
69: 	exec	1,&'$funcall'/1
70: 	last

	.pred	'$exect',1
	.clause
0:	exec	1,&'$funcall'/1
	last

	.pred	'call',2
	.clause
0:	gvarx	2,0
	gvara	0,1
	gvara	1,2
	exec	2,&'$funcall'/2
	last

	.pred	'call',3
	.clause
0:	gvarx	3,0
	gvara	0,1
	gvara	1,2
	gvara	2,3
	exec	3,&'$funcall'/3
	last

	.pred	'call',4
	.clause
0:	gvarx	4,0
	gvara	0,1
	gvara	1,2
	gvara	2,3
	gvara	3,4
	exec	4,&'$funcall'/4
	last

	.pred	'call',5
	.clause
0:	gvarx	5,0
	gvara	0,1
	gvara	1,2
	gvara	2,3
	gvara	3,4
	gvara	4,5
	exec	5,&'$funcall'/5
	last

	.pred	'call',6
	.clause
0:	gvarx	6,0
	gvara	0,1
	gvara	1,2
	gvara	2,3
	gvara	3,4
	gvara	4,5
	gvara	5,6
	exec	6,&'$funcall'/6
	last

	.pred	'call',7
	.clause
0:	gvarx	7,0
	gvara	0,1
	gvara	1,2
	gvara	2,3
	gvara	3,4
	gvara	4,5
	gvara	5,6
	gvara	6,7
	exec	7,&'$funcall'/7
	last

	.pred	'\\+',2
	.clause
0:	gvarx	2,0
	gvara	0,1
	all	1
	labely	0
5: 	te	0,0,3,&6
	gvarx	1,2
	call	1,2,&'$funcall'/2
	cuty	0
	fail	
6: 	tre	0,0
	dallpro	
7: 	last

	.pred	'\\+',3
	.clause
0:	gvarx	3,0
	gvara	0,1
	gvara	1,2
	all	1
	labely	0
7: 	te	0,0,4,&8
	gvarx	2,3
	call	1,3,&'$funcall'/3
	cuty	0
	fail	
8: 	tre	0,0
	dallpro	
9: 	last

	.pred	'\\+',4
	.clause
0:	gvarx	4,0
	gvara	0,1
	gvara	1,2
	gvara	2,3
	all	1
	labely	0
9: 	te	0,0,5,&10
	gvarx	3,4
	call	1,4,&'$funcall'/4
	cuty	0
	fail	
10: 	tre	0,0
	dallpro	
11: 	last

	.pred	'\\+',5
	.clause
0:	gvarx	5,0
	gvara	0,1
	gvara	1,2
	gvara	2,3
	gvara	3,4
	all	1
	labely	0
11: 	te	0,0,6,&12
	gvarx	4,5
	call	1,5,&'$funcall'/5
	cuty	0
	fail	
12: 	tre	0,0
	dallpro	
13: 	last

	.pred	'\\+',6
	.clause
0:	gvarx	6,0
	gvara	0,1
	gvara	1,2
	gvara	2,3
	gvara	3,4
	gvara	4,5
	all	1
	labely	0
13: 	te	0,0,7,&14
	gvarx	5,6
	call	1,6,&'$funcall'/6
	cuty	0
	fail	
14: 	tre	0,0
	dallpro	
15: 	last

	.pred	'\\+',7
	.clause
0:	gvarx	7,0
	gvara	0,1
	gvara	1,2
	gvara	2,3
	gvara	3,4
	gvara	4,5
	gvara	5,6
	all	1
	labely	0
15: 	te	0,0,8,&16
	gvarx	6,7
	call	1,7,&'$funcall'/7
	cuty	0
	fail	
16: 	tre	0,0
	dallpro	
17: 	last

	.pred	'.anot2',2
4: 	fvar	0,255
	jnvx	255,&5
2: 	mkdel	2,&4
	mark	255
	delay	
5: 	fvar	1,255
	jnvx	255,&1
3: 	mkdel	2,&5
	mark	255
	delay	
	.clause
1:	gvarx	2,0
	gvara	0,1
	all	1
	labely	0
10: 	te	0,0,3,&11
	gvarx	1,2
	call	1,2,&'$funcall'/2
	cuty	0
	fail	
11: 	tre	0,0
	dallpro	
12: 	last

	.pred	'not',2
	.clause
0:	exec	2,&'.anot2'/2
	last

	.pred	'.anot3',3
5: 	fvar	0,255
	jnvx	255,&6
2: 	mkdel	3,&5
	mark	255
	delay	
6: 	fvar	1,255
	jnvx	255,&7
3: 	mkdel	3,&6
	mark	255
	delay	
7: 	fvar	2,255
	jnvx	255,&1
4: 	mkdel	3,&7
	mark	255
	delay	
	.clause
1:	gvarx	3,0
	gvara	0,1
	gvara	1,2
	all	1
	labely	0
14: 	te	0,0,4,&15
	gvarx	2,3
	call	1,3,&'$funcall'/3
	cuty	0
	fail	
15: 	tre	0,0
	dallpro	
16: 	last

	.pred	'not',3
	.clause
0:	exec	3,&'.anot3'/3
	last

	.pred	'.anot4',4
6: 	fvar	0,255
	jnvx	255,&7
2: 	mkdel	4,&6
	mark	255
	delay	
7: 	fvar	1,255
	jnvx	255,&8
3: 	mkdel	4,&7
	mark	255
	delay	
8: 	fvar	2,255
	jnvx	255,&9
4: 	mkdel	4,&8
	mark	255
	delay	
9: 	fvar	3,255
	jnvx	255,&1
5: 	mkdel	4,&9
	mark	255
	delay	
	.clause
1:	gvarx	4,0
	gvara	0,1
	gvara	1,2
	gvara	2,3
	all	1
	labely	0
18: 	te	0,0,5,&19
	gvarx	3,4
	call	1,4,&'$funcall'/4
	cuty	0
	fail	
19: 	tre	0,0
	dallpro	
20: 	last

	.pred	'not',4
	.clause
0:	exec	4,&'.anot4'/4
	last

	.pred	'.anot5',5
7: 	fvar	0,255
	jnvx	255,&8
2: 	mkdel	5,&7
	mark	255
	delay	
8: 	fvar	1,255
	jnvx	255,&9
3: 	mkdel	5,&8
	mark	255
	delay	
9: 	fvar	2,255
	jnvx	255,&10
4: 	mkdel	5,&9
	mark	255
	delay	
10: 	fvar	3,255
	jnvx	255,&11
5: 	mkdel	5,&10
	mark	255
	delay	
11: 	fvar	4,255
	jnvx	255,&1
6: 	mkdel	5,&11
	mark	255
	delay	
	.clause
1:	gvarx	5,0
	gvara	0,1
	gvara	1,2
	gvara	2,3
	gvara	3,4
	all	1
	labely	0
22: 	te	0,0,6,&23
	gvarx	4,5
	call	1,5,&'$funcall'/5
	cuty	0
	fail	
23: 	tre	0,0
	dallpro	
24: 	last

	.pred	'not',5
	.clause
0:	exec	5,&'.anot5'/5
	last

	.pred	'.anot6',6
8: 	fvar	0,255
	jnvx	255,&9
2: 	mkdel	6,&8
	mark	255
	delay	
9: 	fvar	1,255
	jnvx	255,&10
3: 	mkdel	6,&9
	mark	255
	delay	
10: 	fvar	2,255
	jnvx	255,&11
4: 	mkdel	6,&10
	mark	255
	delay	
11: 	fvar	3,255
	jnvx	255,&12
5: 	mkdel	6,&11
	mark	255
	delay	
12: 	fvar	4,255
	jnvx	255,&13
6: 	mkdel	6,&12
	mark	255
	delay	
13: 	fvar	5,255
	jnvx	255,&1
7: 	mkdel	6,&13
	mark	255
	delay	
	.clause
1:	gvarx	6,0
	gvara	0,1
	gvara	1,2
	gvara	2,3
	gvara	3,4
	gvara	4,5
	all	1
	labely	0
26: 	te	0,0,7,&27
	gvarx	5,6
	call	1,6,&'$funcall'/6
	cuty	0
	fail	
27: 	tre	0,0
	dallpro	
28: 	last

	.pred	'not',6
	.clause
0:	exec	6,&'.anot6'/6
	last

	.pred	'.anot7',7
9: 	fvar	0,255
	jnvx	255,&10
2: 	mkdel	7,&9
	mark	255
	delay	
10: 	fvar	1,255
	jnvx	255,&11
3: 	mkdel	7,&10
	mark	255
	delay	
11: 	fvar	2,255
	jnvx	255,&12
4: 	mkdel	7,&11
	mark	255
	delay	
12: 	fvar	3,255
	jnvx	255,&13
5: 	mkdel	7,&12
	mark	255
	delay	
13: 	fvar	4,255
	jnvx	255,&14
6: 	mkdel	7,&13
	mark	255
	delay	
14: 	fvar	5,255
	jnvx	255,&15
7: 	mkdel	7,&14
	mark	255
	delay	
15: 	fvar	6,255
	jnvx	255,&1
8: 	mkdel	7,&15
	mark	255
	delay	
	.clause
1:	gvarx	7,0
	gvara	0,1
	gvara	1,2
	gvara	2,3
	gvara	3,4
	gvara	4,5
	gvara	5,6
	all	1
	labely	0
30: 	te	0,0,8,&31
	gvarx	6,7
	call	1,7,&'$funcall'/7
	cuty	0
	fail	
31: 	tre	0,0
	dallpro	
32: 	last

	.pred	'not',7
	.clause
0:	exec	7,&'.anot7'/7
	last

	.pred	'freeze',2
2: 	jnvx	0,&0
1: 	mkdel	2,&2
	mark	0
	delay	
	.clause
0:	gvara	0,1
	exec	1,&'call'/1
	last

	.pred	'sys$wcall',1
	.clause
0:	all	2
	gvary	0,0
	pvaly	0,1
	pvarx	0,0
	pvarx	2,2
	functor	1,0,2
	ps	1,$'$when'/1
	uvalx	2
	pvary	1,2
	call	2,3,&'properties'/3
	puval	1,0
	pvaly	0,1
	dallexe	2,&'sys$whensCall'/2
	last

	.pred	'.asys$whensCall2',5
4: 	fvar	0,255
	jnvx	255,&2
3: 	mkdel	5,&4
	mark	255
	delay	
	.clause
2:	pc	5,$'true'
	idtest	0,5
	jfail	&14
	gvalx	1,4
	gvara	0,2
	gvara	1,4
	exec	2,&'sys$wbcall'/2
14: 	gvara	0,3
	gvara	1,4
	exec	2,&'sys$whensCall'/2
15: 	last

	.pred	'sys$whensCall',2
17: 	sot	0,&18,&0,&1,&16
18: 	mkdel	2,&17
	mark	0
	delay	
16: 	fail	
	.clause
0:	gnil	0
	gvara	0,1
	exec	1,&'sys$callDynamic'/1
	.clause
1:	glvx2	0,5,3
	gsx2	5,5,2,$'when'/2
	gvarx	4,1
29: 	te	6,0,6,&30
	cvttoh	5
	iseq	4,5,0
	j	&31
30: 	tre	6,0
	pc	0,$'true'
31: 	gvara	1,5
	exec	5,&'.asys$whensCall2'/5
	last

	.pred	'sys$callDynamic',1
	.clause
0:	all	3
	gvary	1,0
	pvaly	1,2
	pvarx	0,0
	pvarx	1,1
	functor	2,0,1
	labely	0
	pvary	2,2
	call	3,3,&'getclause'/3
	pvaly	2,255
	gs	255,$':-'/2
	ulvy	1
	uvara	0
	pvaly	0,1
	dallexe	2,&'$call'/2
	last

	.pred	'sys$wbcall',2
	labelx	2
3: 	sot	0,&1,&2,&1,&1
2: 	t	3,0,&0
	tr	3,0,&1
	.clause
0:	pc	3,$'ever'
	id	0,3
	cutx	2
	gvara	0,1
	exec	1,&'sys$callDynamic'/1
	.clause
1:	all	2
	gvary	0,1
	pvary	1,1
	call	2,2,&'sys$waitForWB'/2
	puval	1,0
	pvaly	0,1
	dallexe	2,&'sys$freezeDynamic'/2
	last

	.pred	'sys$freezeDynamic',2
2: 	jnvx	0,&0
1: 	mkdel	2,&2
	mark	0
	delay	
	.clause
0:	gvara	0,1
	exec	1,&'sys$callDynamic'/1
	last

	.pred	'sys$freezeAndBindToKill',2
2: 	jnvx	0,&0
1: 	mkdel	2,&2
	mark	0
	delay	
	.clause
0:	gc	1,$'kill'
	pro	
	last

	.pred	'sys$waitForWB',2
	.clause
0:	all	2
	gvary	1,1
	pc	1,$'true'
	pvaly	1,2
	pvary	0,3
	call	2,4,&'sys$waitForWB'/4
	pvaly	1,0
	puval	0,1
	dallexe	2,&'sys$freezeAndBindToKill'/2
	last

	.pred	'sys$waitForWB',4
9: 	labelx	4
	sot	0,&10,&5,&5,&12
10: 	labelx	4
	sot	3,&11,&0,&0,&0
11: 	mkdel	5,&9
	mark	3
	mark	0
	delay	
5: 	t	5,0,&0
	tr	5,0,&4
12: 	sose	0,&($'and'/2:&6,$'ground'/1:&7,$'or'/2:&8),&5
6: 	t	5,0,&0
	tr	5,0,&1
7: 	t	5,0,&0
	tr	5,0,&3
8: 	t	5,0,&0
	tr	5,0,&2
	.clause
0:	typx	3,252
	cutx	4
	pro	
	.clause
1:	gs	0,$'and'/2
	uvara	0
	all	4
	uvary	3
	gvary	1,2
	gvary	0,3
	cutx	4
	pvary	2,2
	pvaly	0,3
	call	4,4,&'sys$waitForWB'/4
	pvaly	3,0
	puval	2,1
	pvaly	1,2
	pvaly	0,3
	dallexe	4,&'sys$waitForWB'/4
	.clause
2:	gs	0,$'or'/2
	uvara	0
	all	4
	uvary	3
	gvary	2,1
	gvary	1,2
	gvary	0,3
	cutx	4
	pvaly	2,1
	pvaly	1,2
	pvaly	0,3
	call	4,4,&'sys$waitForWB'/4
	pvaly	3,0
	pvaly	2,1
	pvaly	1,2
	pvaly	0,3
	dallexe	4,&'sys$waitForWB'/4
	.clause
3:	gsx1	0,0,$'ground'/1
	cutx	4
	exec	4,&'sys$waitForGround'/4
	.clause
4:	gvalx	1,2
	pro	
	last

	.pred	'sys$waitForGround',4
3: 	fvar	0,255
	jnvx	255,&0
1: 	jnvx	3,&0
2: 	mkdel	4,&3
	mark	3
	mark	255
	delay	
	.clause
0:	gvalx	1,2
	pro	
	last

	.pred	'sys$readyToRun',2
	.clause
0:	all	3
	gvary	1,0
	gvary	0,1
	pvaly	1,2
	pvarx	0,0
	pvarx	3,3
	functor	2,0,3
	ps	1,$'$when'/1
	uvalx	3
	pvary	2,2
	call	3,3,&'properties'/3
	puval	2,0
	pvaly	1,1
	pvaly	0,2
	dallexe	3,&'sys$readyToRunWhens'/3
	last

	.pred	'.asys$readyToRunWhens3',6
4: 	fvar	0,255
	jnvx	255,&2
3: 	mkdel	6,&4
	mark	255
	delay	
	.clause
2:	pc	6,$'true'
	idtest	0,6
	jfail	&16
	gvalx	1,4
	gvara	0,2
	gvara	1,5
	exec	2,&'sys$readyToRunBody'/2
16: 	gvara	0,3
	gvara	1,4
	gvara	2,5
	exec	3,&'sys$readyToRunWhens'/3
17: 	last

	.pred	'sys$readyToRunWhens',3
19: 	sot	0,&20,&0,&1,&18
20: 	mkdel	3,&19
	mark	0
	delay	
18: 	fail	
	.clause
0:	gnil	0
	gc	2,$'true'
	pro	
	.clause
1:	glvx2	0,7,3
	gsx2	7,6,7,$'when'/2
	gvarx	4,1
	gvarx	5,2
30: 	te	8,0,8,&31
	cvttoh	6
	iseq	4,6,0
	j	&32
31: 	tre	8,0
	pc	0,$'true'
32: 	gvara	1,6
	gvara	2,7
	exec	6,&'.asys$readyToRunWhens3'/6
	last

	.pred	'sys$readyToRunBody',2
	labelx	2
3: 	sot	0,&1,&2,&1,&1
2: 	t	3,0,&0
	tr	3,0,&1
	.clause
0:	pc	3,$'ever'
	id	0,3
	cutx	2
	gc	1,$'true'
	pro	
	.clause
1:	exec	2,&'sys$waitForWB'/2
	last

	.pred	'ancestors',1
	.clause
0:	gnil	0
	pro	
	last

	.pred	'subGoalOf',1
	.clause
0:	all	2
	gvary	1,0
	pvary	0,0
	call	2,1,&'ancestors'/1
	pvaly	1,0
	puval	0,1
	dallexe	2,&'member'/2
	last

	.pred	'depth',1
	.clause
0:	gc	0,$0
	pro	
	last

	.pred	'maxDepth',1
	.clause
0:	gvarx	1,0
	ctypx	1,17
	pc	0,$'maxDepth'
	exec	2,&'$setFlag'/2
	last

	.pred	'$applyToEach',3
	labelx	3
	.clause
0:	all	4
	gvary	2,2
	gvary	0,3
	fvar	1,255
	typx	255,252
	pnil	4
	idtest	1,4
	jfail	&9
	j	&15
9: 	jtypx	1,48,&12
	labely	3
10: 	te	0,0,2,&11
	call	4,2,&'member'/2
	pvaly	2,0
	call	4,1,&'call'/1
	fail	
11: 	tre	0,0
	j	&15
12: 	gvalx	1,0
	labely	1
13: 	te	0,0,0,&14
	pvaly	2,0
	call	2,1,&'call'/1
	fail	
14: 	tre	0,0
15: 	cuty	0
	dallpro	
	last

	.pred	'$applyToEachPredicate',3
	labelx	3
2: 	t	4,0,&0
	tr	4,0,&1
	.clause
0:	all	4
	gvary	3,0
	gvary	1,2
	gvary	0,3
	typx	1,252
	pnil	4
	idtest	1,4
	jfail	&13
	j	&16
13: 	te	2,0,2,&14
	gl	1
	uvara	1
	uvary	2
	j	&15
14: 	tre	2,0
	gs	1,$','/2
	uvara	1
	uvary	2
15: 	pvaly	3,0
	pvaly	1,2
	call	4,3,&'$applyToEachPredicate'/3
	pvaly	3,0
	pvaly	2,1
	pvaly	1,2
	call	1,3,&'$applyToEachPredicate'/3
16: 	cuty	0
	dallpro	
	.clause
1:22: 	te	4,0,4,&23
	ctypx	1,2
	j	&24
23: 	tre	4,0
	gsx2	1,4,5,$'/'/2
	ctypx	4,2
	ctypx	5,17
24: 	cutx	3
	all	1
	labely	0
25: 	te	0,0,3,&26
	gvalx	1,0
	gvarx	0,2
	call	1,1,&'call'/1
	fail	
26: 	tre	0,0
	dallpro	
27: 	last

	.pred	'$symbolTable',2
	.clause
0:	gvarx	2,1
	pc	1,$'$symbolTable'
	exec	3,&'getprop'/3
	last

	.pred	'$symbolTableName',2
	.clause
0:	gvarx	2,1
	pc	3,$0
	arg	3,0,1
	pc	0,$'atom'
	exec	3,&'$makeObject'/3
	last

	.pred	'$symbolTableSize',2
	.clause
0:	pc	2,$1
	arg	2,0,2
	eref	2,2
	apushx	2
	pushi	$$1
	afunc	42
	popvx	1
	pro	
	last

	.pred	'$symbolTableEntries',2
	.clause
0:	pc	2,$2
	arg	2,0,2
	eref	2,2
	gvalx	1,2
	pro	
	last

	.pred	'$symbolTableAddress',2
	.clause
0:	pc	2,$4
	arg	2,0,2
	gvalx	1,2
	pro	
	last

	.pred	'$validSymbolTableEntry',1
	.clause
0:	ctypx	0,8
	eref	0,1
	pc	2,$0
	notid	1,2
	pro	
	last

	.pred	'currentAtom',1
	.clause
0:	gvarx	1,0
	pc	0,$'user'
	exec	2,&'currentAtom'/2
	last

	.pred	'currentAtom',2
	labelx	2
2: 	t	3,0,&0
	tr	3,0,&1
	.clause
0:	all	2
	gvary	0,0
	gvary	1,1
	ctypy	1,2
	cutx	2
	pvaly	0,0
	call	2,1,&'currentModule'/1
	pvaly	1,3
	symbol	3,3
	pc	4,$2
	arg	4,3,0
	pvaly	0,1
	dallexe	2,&'$symbolTableName'/2
	.clause
1:	all	9
	gvary	8,0
	gvary	0,1
	gvary	4,2
	typy	0,3
	pvaly	8,0
	call	9,1,&'currentModule'/1
	call	9,0,&'repeat'/0
	pvaly	8,0
	pvary	6,1
	call	8,2,&'$symbolTable'/2
	pvaly	6,0
	pvary	7,1
	call	8,2,&'$symbolTableSize'/2
	pvaly	6,0
	pvary	2,1
	call	8,2,&'$symbolTableAddress'/2
	apushy	7
	afunc	47
	popy	5
	pc	0,$0
	pvaly	5,1
	pvary	3,2
	call	7,3,&'between'/3
	puval	6,0
	pvaly	2,1
	call	6,2,&'$symbolTableAddress'/2
	puval	3,3
	pvaly	5,4
	idtest	3,4
	jfail	&28
	cuty	4
	j	&28
28: 	puval	3,3
	puval	2,4
	arg	3,4,3
	gvary	1,3
	pvaly	1,0
	call	2,1,&'$validSymbolTableEntry'/1
	pc	0,$'atom'
	pvaly	1,1
	pvaly	0,2
	dallexe	3,&'$makeObject'/3
	last

	.pred	'currentModule',1
	.clause
0:	all	1
	gvary	0,0
	jtypy	0,3,&6
	pc	0,$'user'
	pvaly	0,1
	call	1,2,&'currentAtom'/2
	j	&7
6: 	ctypy	0,2
7: 	pvaly	0,0
	pvarx	1,1
	dallexe	2,&'$symbolTable'/2
	last

	.pred	'currentPredicate',2
	.clause
0:	gvarx	3,0
	gvarx	2,1
	pc	0,$'user'
	gvara	1,3
	exec	3,&'currentPredicate'/3
	last

	.pred	'currentPredicate',3
	.clause
0:	all	2
	gvary	1,1
	gvary	0,2
	pvaly	1,1
	call	2,2,&'currentAtom'/2
	pvaly	1,0
	pvaly	0,1
	dallexe	2,&'$currentArity'/2
	last

	.pred	'$currentArity',2
	.clause
0:	all	4
	gvary	1,0
	gvary	0,1
	ctypy	1,2
	pvaly	1,2
	arities	2,0
	pvary	2,1
	call	4,2,&'sort'/2
	pvaly	0,2
	fvar	2,255
	jtypx	255,252,&9
	labely	3
	pvaly	0,0
	pvaly	2,1
	call	4,2,&'member'/2
	cuty	3
	j	&10
9: 	pvaly	0,0
	puval	2,1
	call	2,2,&'member'/2
10: 	pvaly	1,2
	pvaly	0,3
	defined	2,3,2,3
	dallpro	
	last

